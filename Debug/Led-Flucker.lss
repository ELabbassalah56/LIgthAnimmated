
Led-Flucker.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002448  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002448  000024bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001608  00000000  00000000  000024c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000008a4  00000000  00000000  00003acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004370  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000044b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00004620  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00006269  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00007154  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00007f04  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008064  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  000082f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008abf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e4       	ldi	r30, 0x48	; 72
      68:	f4 e2       	ldi	r31, 0x24	; 36
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 9b 05 	call	0xb36	; 0xb36 <main>
      7a:	0c 94 22 12 	jmp	0x2444	; 0x2444 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 eb 11 	jmp	0x23d6	; 0x23d6 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 07 12 	jmp	0x240e	; 0x240e <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 f7 11 	jmp	0x23ee	; 0x23ee <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 13 12 	jmp	0x2426	; 0x2426 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 f7 11 	jmp	0x23ee	; 0x23ee <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 13 12 	jmp	0x2426	; 0x2426 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 eb 11 	jmp	0x23d6	; 0x23d6 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 07 12 	jmp	0x240e	; 0x240e <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 f7 11 	jmp	0x23ee	; 0x23ee <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 13 12 	jmp	0x2426	; 0x2426 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 f7 11 	jmp	0x23ee	; 0x23ee <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 13 12 	jmp	0x2426	; 0x2426 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 f7 11 	jmp	0x23ee	; 0x23ee <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 13 12 	jmp	0x2426	; 0x2426 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 fb 11 	jmp	0x23f6	; 0x23f6 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 17 12 	jmp	0x242e	; 0x242e <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <main>:
void LedDiverging300ms(void);
void PingPong250ms();
void SnakeEffect300ms();
void ConverDiver300ms();

int main(){
     b36:	0f 93       	push	r16
     b38:	1f 93       	push	r17
     b3a:	df 93       	push	r29
     b3c:	cf 93       	push	r28
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	c0 57       	subi	r28, 0x70	; 112
     b44:	d0 40       	sbci	r29, 0x00	; 0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	f8 94       	cli
     b4a:	de bf       	out	0x3e, r29	; 62
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	cd bf       	out	0x3d, r28	; 61


while(1){


FLashingEvrey500ms();
     b50:	0e 94 37 0a 	call	0x146e	; 0x146e <FLashingEvrey500ms>
UNSETPORTA();
     b54:	eb e3       	ldi	r30, 0x3B	; 59
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	10 82       	st	Z, r1
     b5a:	fe 01       	movw	r30, r28
     b5c:	e3 59       	subi	r30, 0x93	; 147
     b5e:	ff 4f       	sbci	r31, 0xFF	; 255
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	aa ef       	ldi	r26, 0xFA	; 250
     b66:	b3 e4       	ldi	r27, 0x43	; 67
     b68:	80 83       	st	Z, r24
     b6a:	91 83       	std	Z+1, r25	; 0x01
     b6c:	a2 83       	std	Z+2, r26	; 0x02
     b6e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b70:	8e 01       	movw	r16, r28
     b72:	07 59       	subi	r16, 0x97	; 151
     b74:	1f 4f       	sbci	r17, 0xFF	; 255
     b76:	fe 01       	movw	r30, r28
     b78:	e3 59       	subi	r30, 0x93	; 147
     b7a:	ff 4f       	sbci	r31, 0xFF	; 255
     b7c:	60 81       	ld	r22, Z
     b7e:	71 81       	ldd	r23, Z+1	; 0x01
     b80:	82 81       	ldd	r24, Z+2	; 0x02
     b82:	93 81       	ldd	r25, Z+3	; 0x03
     b84:	20 e0       	ldi	r18, 0x00	; 0
     b86:	30 e0       	ldi	r19, 0x00	; 0
     b88:	4a ef       	ldi	r20, 0xFA	; 250
     b8a:	54 e4       	ldi	r21, 0x44	; 68
     b8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     b90:	dc 01       	movw	r26, r24
     b92:	cb 01       	movw	r24, r22
     b94:	f8 01       	movw	r30, r16
     b96:	80 83       	st	Z, r24
     b98:	91 83       	std	Z+1, r25	; 0x01
     b9a:	a2 83       	std	Z+2, r26	; 0x02
     b9c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b9e:	fe 01       	movw	r30, r28
     ba0:	e7 59       	subi	r30, 0x97	; 151
     ba2:	ff 4f       	sbci	r31, 0xFF	; 255
     ba4:	60 81       	ld	r22, Z
     ba6:	71 81       	ldd	r23, Z+1	; 0x01
     ba8:	82 81       	ldd	r24, Z+2	; 0x02
     baa:	93 81       	ldd	r25, Z+3	; 0x03
     bac:	20 e0       	ldi	r18, 0x00	; 0
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	40 e8       	ldi	r20, 0x80	; 128
     bb2:	5f e3       	ldi	r21, 0x3F	; 63
     bb4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     bb8:	88 23       	and	r24, r24
     bba:	44 f4       	brge	.+16     	; 0xbcc <main+0x96>
		__ticks = 1;
     bbc:	fe 01       	movw	r30, r28
     bbe:	e9 59       	subi	r30, 0x99	; 153
     bc0:	ff 4f       	sbci	r31, 0xFF	; 255
     bc2:	81 e0       	ldi	r24, 0x01	; 1
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	91 83       	std	Z+1, r25	; 0x01
     bc8:	80 83       	st	Z, r24
     bca:	64 c0       	rjmp	.+200    	; 0xc94 <main+0x15e>
	else if (__tmp > 65535)
     bcc:	fe 01       	movw	r30, r28
     bce:	e7 59       	subi	r30, 0x97	; 151
     bd0:	ff 4f       	sbci	r31, 0xFF	; 255
     bd2:	60 81       	ld	r22, Z
     bd4:	71 81       	ldd	r23, Z+1	; 0x01
     bd6:	82 81       	ldd	r24, Z+2	; 0x02
     bd8:	93 81       	ldd	r25, Z+3	; 0x03
     bda:	20 e0       	ldi	r18, 0x00	; 0
     bdc:	3f ef       	ldi	r19, 0xFF	; 255
     bde:	4f e7       	ldi	r20, 0x7F	; 127
     be0:	57 e4       	ldi	r21, 0x47	; 71
     be2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     be6:	18 16       	cp	r1, r24
     be8:	0c f0       	brlt	.+2      	; 0xbec <main+0xb6>
     bea:	43 c0       	rjmp	.+134    	; 0xc72 <main+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bec:	fe 01       	movw	r30, r28
     bee:	e3 59       	subi	r30, 0x93	; 147
     bf0:	ff 4f       	sbci	r31, 0xFF	; 255
     bf2:	60 81       	ld	r22, Z
     bf4:	71 81       	ldd	r23, Z+1	; 0x01
     bf6:	82 81       	ldd	r24, Z+2	; 0x02
     bf8:	93 81       	ldd	r25, Z+3	; 0x03
     bfa:	20 e0       	ldi	r18, 0x00	; 0
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	40 e2       	ldi	r20, 0x20	; 32
     c00:	51 e4       	ldi	r21, 0x41	; 65
     c02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     c06:	dc 01       	movw	r26, r24
     c08:	cb 01       	movw	r24, r22
     c0a:	8e 01       	movw	r16, r28
     c0c:	09 59       	subi	r16, 0x99	; 153
     c0e:	1f 4f       	sbci	r17, 0xFF	; 255
     c10:	bc 01       	movw	r22, r24
     c12:	cd 01       	movw	r24, r26
     c14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c18:	dc 01       	movw	r26, r24
     c1a:	cb 01       	movw	r24, r22
     c1c:	f8 01       	movw	r30, r16
     c1e:	91 83       	std	Z+1, r25	; 0x01
     c20:	80 83       	st	Z, r24
     c22:	1f c0       	rjmp	.+62     	; 0xc62 <main+0x12c>
     c24:	fe 01       	movw	r30, r28
     c26:	eb 59       	subi	r30, 0x9B	; 155
     c28:	ff 4f       	sbci	r31, 0xFF	; 255
     c2a:	88 ec       	ldi	r24, 0xC8	; 200
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	91 83       	std	Z+1, r25	; 0x01
     c30:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c32:	fe 01       	movw	r30, r28
     c34:	eb 59       	subi	r30, 0x9B	; 155
     c36:	ff 4f       	sbci	r31, 0xFF	; 255
     c38:	80 81       	ld	r24, Z
     c3a:	91 81       	ldd	r25, Z+1	; 0x01
     c3c:	01 97       	sbiw	r24, 0x01	; 1
     c3e:	f1 f7       	brne	.-4      	; 0xc3c <main+0x106>
     c40:	fe 01       	movw	r30, r28
     c42:	eb 59       	subi	r30, 0x9B	; 155
     c44:	ff 4f       	sbci	r31, 0xFF	; 255
     c46:	91 83       	std	Z+1, r25	; 0x01
     c48:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c4a:	de 01       	movw	r26, r28
     c4c:	a9 59       	subi	r26, 0x99	; 153
     c4e:	bf 4f       	sbci	r27, 0xFF	; 255
     c50:	fe 01       	movw	r30, r28
     c52:	e9 59       	subi	r30, 0x99	; 153
     c54:	ff 4f       	sbci	r31, 0xFF	; 255
     c56:	80 81       	ld	r24, Z
     c58:	91 81       	ldd	r25, Z+1	; 0x01
     c5a:	01 97       	sbiw	r24, 0x01	; 1
     c5c:	11 96       	adiw	r26, 0x01	; 1
     c5e:	9c 93       	st	X, r25
     c60:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c62:	fe 01       	movw	r30, r28
     c64:	e9 59       	subi	r30, 0x99	; 153
     c66:	ff 4f       	sbci	r31, 0xFF	; 255
     c68:	80 81       	ld	r24, Z
     c6a:	91 81       	ldd	r25, Z+1	; 0x01
     c6c:	00 97       	sbiw	r24, 0x00	; 0
     c6e:	d1 f6       	brne	.-76     	; 0xc24 <main+0xee>
     c70:	27 c0       	rjmp	.+78     	; 0xcc0 <main+0x18a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c72:	8e 01       	movw	r16, r28
     c74:	09 59       	subi	r16, 0x99	; 153
     c76:	1f 4f       	sbci	r17, 0xFF	; 255
     c78:	fe 01       	movw	r30, r28
     c7a:	e7 59       	subi	r30, 0x97	; 151
     c7c:	ff 4f       	sbci	r31, 0xFF	; 255
     c7e:	60 81       	ld	r22, Z
     c80:	71 81       	ldd	r23, Z+1	; 0x01
     c82:	82 81       	ldd	r24, Z+2	; 0x02
     c84:	93 81       	ldd	r25, Z+3	; 0x03
     c86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c8a:	dc 01       	movw	r26, r24
     c8c:	cb 01       	movw	r24, r22
     c8e:	f8 01       	movw	r30, r16
     c90:	91 83       	std	Z+1, r25	; 0x01
     c92:	80 83       	st	Z, r24
     c94:	de 01       	movw	r26, r28
     c96:	ad 59       	subi	r26, 0x9D	; 157
     c98:	bf 4f       	sbci	r27, 0xFF	; 255
     c9a:	fe 01       	movw	r30, r28
     c9c:	e9 59       	subi	r30, 0x99	; 153
     c9e:	ff 4f       	sbci	r31, 0xFF	; 255
     ca0:	80 81       	ld	r24, Z
     ca2:	91 81       	ldd	r25, Z+1	; 0x01
     ca4:	8d 93       	st	X+, r24
     ca6:	9c 93       	st	X, r25
     ca8:	fe 01       	movw	r30, r28
     caa:	ed 59       	subi	r30, 0x9D	; 157
     cac:	ff 4f       	sbci	r31, 0xFF	; 255
     cae:	80 81       	ld	r24, Z
     cb0:	91 81       	ldd	r25, Z+1	; 0x01
     cb2:	01 97       	sbiw	r24, 0x01	; 1
     cb4:	f1 f7       	brne	.-4      	; 0xcb2 <main+0x17c>
     cb6:	fe 01       	movw	r30, r28
     cb8:	ed 59       	subi	r30, 0x9D	; 157
     cba:	ff 4f       	sbci	r31, 0xFF	; 255
     cbc:	91 83       	std	Z+1, r25	; 0x01
     cbe:	80 83       	st	Z, r24
_delay_ms(500);

ShiftLeft250ms();
     cc0:	0e 94 39 0b 	call	0x1672	; 0x1672 <ShiftLeft250ms>
UNSETPORTA();
     cc4:	eb e3       	ldi	r30, 0x3B	; 59
     cc6:	f0 e0       	ldi	r31, 0x00	; 0
     cc8:	10 82       	st	Z, r1
     cca:	fe 01       	movw	r30, r28
     ccc:	e1 5a       	subi	r30, 0xA1	; 161
     cce:	ff 4f       	sbci	r31, 0xFF	; 255
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	aa ef       	ldi	r26, 0xFA	; 250
     cd6:	b3 e4       	ldi	r27, 0x43	; 67
     cd8:	80 83       	st	Z, r24
     cda:	91 83       	std	Z+1, r25	; 0x01
     cdc:	a2 83       	std	Z+2, r26	; 0x02
     cde:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ce0:	8e 01       	movw	r16, r28
     ce2:	05 5a       	subi	r16, 0xA5	; 165
     ce4:	1f 4f       	sbci	r17, 0xFF	; 255
     ce6:	fe 01       	movw	r30, r28
     ce8:	e1 5a       	subi	r30, 0xA1	; 161
     cea:	ff 4f       	sbci	r31, 0xFF	; 255
     cec:	60 81       	ld	r22, Z
     cee:	71 81       	ldd	r23, Z+1	; 0x01
     cf0:	82 81       	ldd	r24, Z+2	; 0x02
     cf2:	93 81       	ldd	r25, Z+3	; 0x03
     cf4:	20 e0       	ldi	r18, 0x00	; 0
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	4a ef       	ldi	r20, 0xFA	; 250
     cfa:	54 e4       	ldi	r21, 0x44	; 68
     cfc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d00:	dc 01       	movw	r26, r24
     d02:	cb 01       	movw	r24, r22
     d04:	f8 01       	movw	r30, r16
     d06:	80 83       	st	Z, r24
     d08:	91 83       	std	Z+1, r25	; 0x01
     d0a:	a2 83       	std	Z+2, r26	; 0x02
     d0c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d0e:	fe 01       	movw	r30, r28
     d10:	e5 5a       	subi	r30, 0xA5	; 165
     d12:	ff 4f       	sbci	r31, 0xFF	; 255
     d14:	60 81       	ld	r22, Z
     d16:	71 81       	ldd	r23, Z+1	; 0x01
     d18:	82 81       	ldd	r24, Z+2	; 0x02
     d1a:	93 81       	ldd	r25, Z+3	; 0x03
     d1c:	20 e0       	ldi	r18, 0x00	; 0
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	40 e8       	ldi	r20, 0x80	; 128
     d22:	5f e3       	ldi	r21, 0x3F	; 63
     d24:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d28:	88 23       	and	r24, r24
     d2a:	44 f4       	brge	.+16     	; 0xd3c <main+0x206>
		__ticks = 1;
     d2c:	fe 01       	movw	r30, r28
     d2e:	e7 5a       	subi	r30, 0xA7	; 167
     d30:	ff 4f       	sbci	r31, 0xFF	; 255
     d32:	81 e0       	ldi	r24, 0x01	; 1
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	91 83       	std	Z+1, r25	; 0x01
     d38:	80 83       	st	Z, r24
     d3a:	64 c0       	rjmp	.+200    	; 0xe04 <main+0x2ce>
	else if (__tmp > 65535)
     d3c:	fe 01       	movw	r30, r28
     d3e:	e5 5a       	subi	r30, 0xA5	; 165
     d40:	ff 4f       	sbci	r31, 0xFF	; 255
     d42:	60 81       	ld	r22, Z
     d44:	71 81       	ldd	r23, Z+1	; 0x01
     d46:	82 81       	ldd	r24, Z+2	; 0x02
     d48:	93 81       	ldd	r25, Z+3	; 0x03
     d4a:	20 e0       	ldi	r18, 0x00	; 0
     d4c:	3f ef       	ldi	r19, 0xFF	; 255
     d4e:	4f e7       	ldi	r20, 0x7F	; 127
     d50:	57 e4       	ldi	r21, 0x47	; 71
     d52:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d56:	18 16       	cp	r1, r24
     d58:	0c f0       	brlt	.+2      	; 0xd5c <main+0x226>
     d5a:	43 c0       	rjmp	.+134    	; 0xde2 <main+0x2ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d5c:	fe 01       	movw	r30, r28
     d5e:	e1 5a       	subi	r30, 0xA1	; 161
     d60:	ff 4f       	sbci	r31, 0xFF	; 255
     d62:	60 81       	ld	r22, Z
     d64:	71 81       	ldd	r23, Z+1	; 0x01
     d66:	82 81       	ldd	r24, Z+2	; 0x02
     d68:	93 81       	ldd	r25, Z+3	; 0x03
     d6a:	20 e0       	ldi	r18, 0x00	; 0
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	40 e2       	ldi	r20, 0x20	; 32
     d70:	51 e4       	ldi	r21, 0x41	; 65
     d72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d76:	dc 01       	movw	r26, r24
     d78:	cb 01       	movw	r24, r22
     d7a:	8e 01       	movw	r16, r28
     d7c:	07 5a       	subi	r16, 0xA7	; 167
     d7e:	1f 4f       	sbci	r17, 0xFF	; 255
     d80:	bc 01       	movw	r22, r24
     d82:	cd 01       	movw	r24, r26
     d84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d88:	dc 01       	movw	r26, r24
     d8a:	cb 01       	movw	r24, r22
     d8c:	f8 01       	movw	r30, r16
     d8e:	91 83       	std	Z+1, r25	; 0x01
     d90:	80 83       	st	Z, r24
     d92:	1f c0       	rjmp	.+62     	; 0xdd2 <main+0x29c>
     d94:	fe 01       	movw	r30, r28
     d96:	e9 5a       	subi	r30, 0xA9	; 169
     d98:	ff 4f       	sbci	r31, 0xFF	; 255
     d9a:	88 ec       	ldi	r24, 0xC8	; 200
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	91 83       	std	Z+1, r25	; 0x01
     da0:	80 83       	st	Z, r24
     da2:	fe 01       	movw	r30, r28
     da4:	e9 5a       	subi	r30, 0xA9	; 169
     da6:	ff 4f       	sbci	r31, 0xFF	; 255
     da8:	80 81       	ld	r24, Z
     daa:	91 81       	ldd	r25, Z+1	; 0x01
     dac:	01 97       	sbiw	r24, 0x01	; 1
     dae:	f1 f7       	brne	.-4      	; 0xdac <main+0x276>
     db0:	fe 01       	movw	r30, r28
     db2:	e9 5a       	subi	r30, 0xA9	; 169
     db4:	ff 4f       	sbci	r31, 0xFF	; 255
     db6:	91 83       	std	Z+1, r25	; 0x01
     db8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dba:	de 01       	movw	r26, r28
     dbc:	a7 5a       	subi	r26, 0xA7	; 167
     dbe:	bf 4f       	sbci	r27, 0xFF	; 255
     dc0:	fe 01       	movw	r30, r28
     dc2:	e7 5a       	subi	r30, 0xA7	; 167
     dc4:	ff 4f       	sbci	r31, 0xFF	; 255
     dc6:	80 81       	ld	r24, Z
     dc8:	91 81       	ldd	r25, Z+1	; 0x01
     dca:	01 97       	sbiw	r24, 0x01	; 1
     dcc:	11 96       	adiw	r26, 0x01	; 1
     dce:	9c 93       	st	X, r25
     dd0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dd2:	fe 01       	movw	r30, r28
     dd4:	e7 5a       	subi	r30, 0xA7	; 167
     dd6:	ff 4f       	sbci	r31, 0xFF	; 255
     dd8:	80 81       	ld	r24, Z
     dda:	91 81       	ldd	r25, Z+1	; 0x01
     ddc:	00 97       	sbiw	r24, 0x00	; 0
     dde:	d1 f6       	brne	.-76     	; 0xd94 <main+0x25e>
     de0:	27 c0       	rjmp	.+78     	; 0xe30 <main+0x2fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     de2:	8e 01       	movw	r16, r28
     de4:	07 5a       	subi	r16, 0xA7	; 167
     de6:	1f 4f       	sbci	r17, 0xFF	; 255
     de8:	fe 01       	movw	r30, r28
     dea:	e5 5a       	subi	r30, 0xA5	; 165
     dec:	ff 4f       	sbci	r31, 0xFF	; 255
     dee:	60 81       	ld	r22, Z
     df0:	71 81       	ldd	r23, Z+1	; 0x01
     df2:	82 81       	ldd	r24, Z+2	; 0x02
     df4:	93 81       	ldd	r25, Z+3	; 0x03
     df6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dfa:	dc 01       	movw	r26, r24
     dfc:	cb 01       	movw	r24, r22
     dfe:	f8 01       	movw	r30, r16
     e00:	91 83       	std	Z+1, r25	; 0x01
     e02:	80 83       	st	Z, r24
     e04:	de 01       	movw	r26, r28
     e06:	ab 5a       	subi	r26, 0xAB	; 171
     e08:	bf 4f       	sbci	r27, 0xFF	; 255
     e0a:	fe 01       	movw	r30, r28
     e0c:	e7 5a       	subi	r30, 0xA7	; 167
     e0e:	ff 4f       	sbci	r31, 0xFF	; 255
     e10:	80 81       	ld	r24, Z
     e12:	91 81       	ldd	r25, Z+1	; 0x01
     e14:	8d 93       	st	X+, r24
     e16:	9c 93       	st	X, r25
     e18:	fe 01       	movw	r30, r28
     e1a:	eb 5a       	subi	r30, 0xAB	; 171
     e1c:	ff 4f       	sbci	r31, 0xFF	; 255
     e1e:	80 81       	ld	r24, Z
     e20:	91 81       	ldd	r25, Z+1	; 0x01
     e22:	01 97       	sbiw	r24, 0x01	; 1
     e24:	f1 f7       	brne	.-4      	; 0xe22 <main+0x2ec>
     e26:	fe 01       	movw	r30, r28
     e28:	eb 5a       	subi	r30, 0xAB	; 171
     e2a:	ff 4f       	sbci	r31, 0xFF	; 255
     e2c:	91 83       	std	Z+1, r25	; 0x01
     e2e:	80 83       	st	Z, r24
_delay_ms(500);
ShiftRight250ms();
     e30:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <ShiftRight250ms>
UNSETPORTA();
     e34:	eb e3       	ldi	r30, 0x3B	; 59
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	10 82       	st	Z, r1
     e3a:	fe 01       	movw	r30, r28
     e3c:	ef 5a       	subi	r30, 0xAF	; 175
     e3e:	ff 4f       	sbci	r31, 0xFF	; 255
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	aa ef       	ldi	r26, 0xFA	; 250
     e46:	b3 e4       	ldi	r27, 0x43	; 67
     e48:	80 83       	st	Z, r24
     e4a:	91 83       	std	Z+1, r25	; 0x01
     e4c:	a2 83       	std	Z+2, r26	; 0x02
     e4e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e50:	8e 01       	movw	r16, r28
     e52:	03 5b       	subi	r16, 0xB3	; 179
     e54:	1f 4f       	sbci	r17, 0xFF	; 255
     e56:	fe 01       	movw	r30, r28
     e58:	ef 5a       	subi	r30, 0xAF	; 175
     e5a:	ff 4f       	sbci	r31, 0xFF	; 255
     e5c:	60 81       	ld	r22, Z
     e5e:	71 81       	ldd	r23, Z+1	; 0x01
     e60:	82 81       	ldd	r24, Z+2	; 0x02
     e62:	93 81       	ldd	r25, Z+3	; 0x03
     e64:	20 e0       	ldi	r18, 0x00	; 0
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	4a ef       	ldi	r20, 0xFA	; 250
     e6a:	54 e4       	ldi	r21, 0x44	; 68
     e6c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e70:	dc 01       	movw	r26, r24
     e72:	cb 01       	movw	r24, r22
     e74:	f8 01       	movw	r30, r16
     e76:	80 83       	st	Z, r24
     e78:	91 83       	std	Z+1, r25	; 0x01
     e7a:	a2 83       	std	Z+2, r26	; 0x02
     e7c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e7e:	fe 01       	movw	r30, r28
     e80:	e3 5b       	subi	r30, 0xB3	; 179
     e82:	ff 4f       	sbci	r31, 0xFF	; 255
     e84:	60 81       	ld	r22, Z
     e86:	71 81       	ldd	r23, Z+1	; 0x01
     e88:	82 81       	ldd	r24, Z+2	; 0x02
     e8a:	93 81       	ldd	r25, Z+3	; 0x03
     e8c:	20 e0       	ldi	r18, 0x00	; 0
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	40 e8       	ldi	r20, 0x80	; 128
     e92:	5f e3       	ldi	r21, 0x3F	; 63
     e94:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     e98:	88 23       	and	r24, r24
     e9a:	44 f4       	brge	.+16     	; 0xeac <main+0x376>
		__ticks = 1;
     e9c:	fe 01       	movw	r30, r28
     e9e:	e5 5b       	subi	r30, 0xB5	; 181
     ea0:	ff 4f       	sbci	r31, 0xFF	; 255
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	91 83       	std	Z+1, r25	; 0x01
     ea8:	80 83       	st	Z, r24
     eaa:	64 c0       	rjmp	.+200    	; 0xf74 <main+0x43e>
	else if (__tmp > 65535)
     eac:	fe 01       	movw	r30, r28
     eae:	e3 5b       	subi	r30, 0xB3	; 179
     eb0:	ff 4f       	sbci	r31, 0xFF	; 255
     eb2:	60 81       	ld	r22, Z
     eb4:	71 81       	ldd	r23, Z+1	; 0x01
     eb6:	82 81       	ldd	r24, Z+2	; 0x02
     eb8:	93 81       	ldd	r25, Z+3	; 0x03
     eba:	20 e0       	ldi	r18, 0x00	; 0
     ebc:	3f ef       	ldi	r19, 0xFF	; 255
     ebe:	4f e7       	ldi	r20, 0x7F	; 127
     ec0:	57 e4       	ldi	r21, 0x47	; 71
     ec2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     ec6:	18 16       	cp	r1, r24
     ec8:	0c f0       	brlt	.+2      	; 0xecc <main+0x396>
     eca:	43 c0       	rjmp	.+134    	; 0xf52 <main+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ecc:	fe 01       	movw	r30, r28
     ece:	ef 5a       	subi	r30, 0xAF	; 175
     ed0:	ff 4f       	sbci	r31, 0xFF	; 255
     ed2:	60 81       	ld	r22, Z
     ed4:	71 81       	ldd	r23, Z+1	; 0x01
     ed6:	82 81       	ldd	r24, Z+2	; 0x02
     ed8:	93 81       	ldd	r25, Z+3	; 0x03
     eda:	20 e0       	ldi	r18, 0x00	; 0
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	40 e2       	ldi	r20, 0x20	; 32
     ee0:	51 e4       	ldi	r21, 0x41	; 65
     ee2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     ee6:	dc 01       	movw	r26, r24
     ee8:	cb 01       	movw	r24, r22
     eea:	8e 01       	movw	r16, r28
     eec:	05 5b       	subi	r16, 0xB5	; 181
     eee:	1f 4f       	sbci	r17, 0xFF	; 255
     ef0:	bc 01       	movw	r22, r24
     ef2:	cd 01       	movw	r24, r26
     ef4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ef8:	dc 01       	movw	r26, r24
     efa:	cb 01       	movw	r24, r22
     efc:	f8 01       	movw	r30, r16
     efe:	91 83       	std	Z+1, r25	; 0x01
     f00:	80 83       	st	Z, r24
     f02:	1f c0       	rjmp	.+62     	; 0xf42 <main+0x40c>
     f04:	fe 01       	movw	r30, r28
     f06:	e7 5b       	subi	r30, 0xB7	; 183
     f08:	ff 4f       	sbci	r31, 0xFF	; 255
     f0a:	88 ec       	ldi	r24, 0xC8	; 200
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	91 83       	std	Z+1, r25	; 0x01
     f10:	80 83       	st	Z, r24
     f12:	fe 01       	movw	r30, r28
     f14:	e7 5b       	subi	r30, 0xB7	; 183
     f16:	ff 4f       	sbci	r31, 0xFF	; 255
     f18:	80 81       	ld	r24, Z
     f1a:	91 81       	ldd	r25, Z+1	; 0x01
     f1c:	01 97       	sbiw	r24, 0x01	; 1
     f1e:	f1 f7       	brne	.-4      	; 0xf1c <main+0x3e6>
     f20:	fe 01       	movw	r30, r28
     f22:	e7 5b       	subi	r30, 0xB7	; 183
     f24:	ff 4f       	sbci	r31, 0xFF	; 255
     f26:	91 83       	std	Z+1, r25	; 0x01
     f28:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f2a:	de 01       	movw	r26, r28
     f2c:	a5 5b       	subi	r26, 0xB5	; 181
     f2e:	bf 4f       	sbci	r27, 0xFF	; 255
     f30:	fe 01       	movw	r30, r28
     f32:	e5 5b       	subi	r30, 0xB5	; 181
     f34:	ff 4f       	sbci	r31, 0xFF	; 255
     f36:	80 81       	ld	r24, Z
     f38:	91 81       	ldd	r25, Z+1	; 0x01
     f3a:	01 97       	sbiw	r24, 0x01	; 1
     f3c:	11 96       	adiw	r26, 0x01	; 1
     f3e:	9c 93       	st	X, r25
     f40:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f42:	fe 01       	movw	r30, r28
     f44:	e5 5b       	subi	r30, 0xB5	; 181
     f46:	ff 4f       	sbci	r31, 0xFF	; 255
     f48:	80 81       	ld	r24, Z
     f4a:	91 81       	ldd	r25, Z+1	; 0x01
     f4c:	00 97       	sbiw	r24, 0x00	; 0
     f4e:	d1 f6       	brne	.-76     	; 0xf04 <main+0x3ce>
     f50:	27 c0       	rjmp	.+78     	; 0xfa0 <main+0x46a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f52:	8e 01       	movw	r16, r28
     f54:	05 5b       	subi	r16, 0xB5	; 181
     f56:	1f 4f       	sbci	r17, 0xFF	; 255
     f58:	fe 01       	movw	r30, r28
     f5a:	e3 5b       	subi	r30, 0xB3	; 179
     f5c:	ff 4f       	sbci	r31, 0xFF	; 255
     f5e:	60 81       	ld	r22, Z
     f60:	71 81       	ldd	r23, Z+1	; 0x01
     f62:	82 81       	ldd	r24, Z+2	; 0x02
     f64:	93 81       	ldd	r25, Z+3	; 0x03
     f66:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f6a:	dc 01       	movw	r26, r24
     f6c:	cb 01       	movw	r24, r22
     f6e:	f8 01       	movw	r30, r16
     f70:	91 83       	std	Z+1, r25	; 0x01
     f72:	80 83       	st	Z, r24
     f74:	de 01       	movw	r26, r28
     f76:	a9 5b       	subi	r26, 0xB9	; 185
     f78:	bf 4f       	sbci	r27, 0xFF	; 255
     f7a:	fe 01       	movw	r30, r28
     f7c:	e5 5b       	subi	r30, 0xB5	; 181
     f7e:	ff 4f       	sbci	r31, 0xFF	; 255
     f80:	80 81       	ld	r24, Z
     f82:	91 81       	ldd	r25, Z+1	; 0x01
     f84:	8d 93       	st	X+, r24
     f86:	9c 93       	st	X, r25
     f88:	fe 01       	movw	r30, r28
     f8a:	e9 5b       	subi	r30, 0xB9	; 185
     f8c:	ff 4f       	sbci	r31, 0xFF	; 255
     f8e:	80 81       	ld	r24, Z
     f90:	91 81       	ldd	r25, Z+1	; 0x01
     f92:	01 97       	sbiw	r24, 0x01	; 1
     f94:	f1 f7       	brne	.-4      	; 0xf92 <main+0x45c>
     f96:	fe 01       	movw	r30, r28
     f98:	e9 5b       	subi	r30, 0xB9	; 185
     f9a:	ff 4f       	sbci	r31, 0xFF	; 255
     f9c:	91 83       	std	Z+1, r25	; 0x01
     f9e:	80 83       	st	Z, r24
_delay_ms(500);
LedConverging300ms();
     fa0:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <LedConverging300ms>
UNSETPORTA();
     fa4:	eb e3       	ldi	r30, 0x3B	; 59
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	10 82       	st	Z, r1
     faa:	fe 01       	movw	r30, r28
     fac:	ed 5b       	subi	r30, 0xBD	; 189
     fae:	ff 4f       	sbci	r31, 0xFF	; 255
     fb0:	80 e0       	ldi	r24, 0x00	; 0
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	aa ef       	ldi	r26, 0xFA	; 250
     fb6:	b3 e4       	ldi	r27, 0x43	; 67
     fb8:	80 83       	st	Z, r24
     fba:	91 83       	std	Z+1, r25	; 0x01
     fbc:	a2 83       	std	Z+2, r26	; 0x02
     fbe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fc0:	8e 01       	movw	r16, r28
     fc2:	01 5c       	subi	r16, 0xC1	; 193
     fc4:	1f 4f       	sbci	r17, 0xFF	; 255
     fc6:	fe 01       	movw	r30, r28
     fc8:	ed 5b       	subi	r30, 0xBD	; 189
     fca:	ff 4f       	sbci	r31, 0xFF	; 255
     fcc:	60 81       	ld	r22, Z
     fce:	71 81       	ldd	r23, Z+1	; 0x01
     fd0:	82 81       	ldd	r24, Z+2	; 0x02
     fd2:	93 81       	ldd	r25, Z+3	; 0x03
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	4a ef       	ldi	r20, 0xFA	; 250
     fda:	54 e4       	ldi	r21, 0x44	; 68
     fdc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     fe0:	dc 01       	movw	r26, r24
     fe2:	cb 01       	movw	r24, r22
     fe4:	f8 01       	movw	r30, r16
     fe6:	80 83       	st	Z, r24
     fe8:	91 83       	std	Z+1, r25	; 0x01
     fea:	a2 83       	std	Z+2, r26	; 0x02
     fec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     fee:	fe 01       	movw	r30, r28
     ff0:	ff 96       	adiw	r30, 0x3f	; 63
     ff2:	60 81       	ld	r22, Z
     ff4:	71 81       	ldd	r23, Z+1	; 0x01
     ff6:	82 81       	ldd	r24, Z+2	; 0x02
     ff8:	93 81       	ldd	r25, Z+3	; 0x03
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	40 e8       	ldi	r20, 0x80	; 128
    1000:	5f e3       	ldi	r21, 0x3F	; 63
    1002:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1006:	88 23       	and	r24, r24
    1008:	2c f4       	brge	.+10     	; 0x1014 <main+0x4de>
		__ticks = 1;
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	9e af       	std	Y+62, r25	; 0x3e
    1010:	8d af       	std	Y+61, r24	; 0x3d
    1012:	46 c0       	rjmp	.+140    	; 0x10a0 <main+0x56a>
	else if (__tmp > 65535)
    1014:	fe 01       	movw	r30, r28
    1016:	ff 96       	adiw	r30, 0x3f	; 63
    1018:	60 81       	ld	r22, Z
    101a:	71 81       	ldd	r23, Z+1	; 0x01
    101c:	82 81       	ldd	r24, Z+2	; 0x02
    101e:	93 81       	ldd	r25, Z+3	; 0x03
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	3f ef       	ldi	r19, 0xFF	; 255
    1024:	4f e7       	ldi	r20, 0x7F	; 127
    1026:	57 e4       	ldi	r21, 0x47	; 71
    1028:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    102c:	18 16       	cp	r1, r24
    102e:	64 f5       	brge	.+88     	; 0x1088 <main+0x552>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1030:	fe 01       	movw	r30, r28
    1032:	ed 5b       	subi	r30, 0xBD	; 189
    1034:	ff 4f       	sbci	r31, 0xFF	; 255
    1036:	60 81       	ld	r22, Z
    1038:	71 81       	ldd	r23, Z+1	; 0x01
    103a:	82 81       	ldd	r24, Z+2	; 0x02
    103c:	93 81       	ldd	r25, Z+3	; 0x03
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	40 e2       	ldi	r20, 0x20	; 32
    1044:	51 e4       	ldi	r21, 0x41	; 65
    1046:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    104a:	dc 01       	movw	r26, r24
    104c:	cb 01       	movw	r24, r22
    104e:	bc 01       	movw	r22, r24
    1050:	cd 01       	movw	r24, r26
    1052:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1056:	dc 01       	movw	r26, r24
    1058:	cb 01       	movw	r24, r22
    105a:	9e af       	std	Y+62, r25	; 0x3e
    105c:	8d af       	std	Y+61, r24	; 0x3d
    105e:	0f c0       	rjmp	.+30     	; 0x107e <main+0x548>
    1060:	88 ec       	ldi	r24, 0xC8	; 200
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	9c af       	std	Y+60, r25	; 0x3c
    1066:	8b af       	std	Y+59, r24	; 0x3b
    1068:	8b ad       	ldd	r24, Y+59	; 0x3b
    106a:	9c ad       	ldd	r25, Y+60	; 0x3c
    106c:	01 97       	sbiw	r24, 0x01	; 1
    106e:	f1 f7       	brne	.-4      	; 0x106c <main+0x536>
    1070:	9c af       	std	Y+60, r25	; 0x3c
    1072:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1074:	8d ad       	ldd	r24, Y+61	; 0x3d
    1076:	9e ad       	ldd	r25, Y+62	; 0x3e
    1078:	01 97       	sbiw	r24, 0x01	; 1
    107a:	9e af       	std	Y+62, r25	; 0x3e
    107c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    107e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1080:	9e ad       	ldd	r25, Y+62	; 0x3e
    1082:	00 97       	sbiw	r24, 0x00	; 0
    1084:	69 f7       	brne	.-38     	; 0x1060 <main+0x52a>
    1086:	16 c0       	rjmp	.+44     	; 0x10b4 <main+0x57e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1088:	fe 01       	movw	r30, r28
    108a:	ff 96       	adiw	r30, 0x3f	; 63
    108c:	60 81       	ld	r22, Z
    108e:	71 81       	ldd	r23, Z+1	; 0x01
    1090:	82 81       	ldd	r24, Z+2	; 0x02
    1092:	93 81       	ldd	r25, Z+3	; 0x03
    1094:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1098:	dc 01       	movw	r26, r24
    109a:	cb 01       	movw	r24, r22
    109c:	9e af       	std	Y+62, r25	; 0x3e
    109e:	8d af       	std	Y+61, r24	; 0x3d
    10a0:	8d ad       	ldd	r24, Y+61	; 0x3d
    10a2:	9e ad       	ldd	r25, Y+62	; 0x3e
    10a4:	9a af       	std	Y+58, r25	; 0x3a
    10a6:	89 af       	std	Y+57, r24	; 0x39
    10a8:	89 ad       	ldd	r24, Y+57	; 0x39
    10aa:	9a ad       	ldd	r25, Y+58	; 0x3a
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	f1 f7       	brne	.-4      	; 0x10ac <main+0x576>
    10b0:	9a af       	std	Y+58, r25	; 0x3a
    10b2:	89 af       	std	Y+57, r24	; 0x39
_delay_ms(500);
LedDiverging300ms();
    10b4:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <LedDiverging300ms>
UNSETPORTA();
    10b8:	eb e3       	ldi	r30, 0x3B	; 59
    10ba:	f0 e0       	ldi	r31, 0x00	; 0
    10bc:	10 82       	st	Z, r1
    10be:	80 e0       	ldi	r24, 0x00	; 0
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	aa ef       	ldi	r26, 0xFA	; 250
    10c4:	b3 e4       	ldi	r27, 0x43	; 67
    10c6:	8d ab       	std	Y+53, r24	; 0x35
    10c8:	9e ab       	std	Y+54, r25	; 0x36
    10ca:	af ab       	std	Y+55, r26	; 0x37
    10cc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10ce:	6d a9       	ldd	r22, Y+53	; 0x35
    10d0:	7e a9       	ldd	r23, Y+54	; 0x36
    10d2:	8f a9       	ldd	r24, Y+55	; 0x37
    10d4:	98 ad       	ldd	r25, Y+56	; 0x38
    10d6:	20 e0       	ldi	r18, 0x00	; 0
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	4a ef       	ldi	r20, 0xFA	; 250
    10dc:	54 e4       	ldi	r21, 0x44	; 68
    10de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10e2:	dc 01       	movw	r26, r24
    10e4:	cb 01       	movw	r24, r22
    10e6:	89 ab       	std	Y+49, r24	; 0x31
    10e8:	9a ab       	std	Y+50, r25	; 0x32
    10ea:	ab ab       	std	Y+51, r26	; 0x33
    10ec:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    10ee:	69 a9       	ldd	r22, Y+49	; 0x31
    10f0:	7a a9       	ldd	r23, Y+50	; 0x32
    10f2:	8b a9       	ldd	r24, Y+51	; 0x33
    10f4:	9c a9       	ldd	r25, Y+52	; 0x34
    10f6:	20 e0       	ldi	r18, 0x00	; 0
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	40 e8       	ldi	r20, 0x80	; 128
    10fc:	5f e3       	ldi	r21, 0x3F	; 63
    10fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1102:	88 23       	and	r24, r24
    1104:	2c f4       	brge	.+10     	; 0x1110 <main+0x5da>
		__ticks = 1;
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	98 ab       	std	Y+48, r25	; 0x30
    110c:	8f a7       	std	Y+47, r24	; 0x2f
    110e:	3f c0       	rjmp	.+126    	; 0x118e <main+0x658>
	else if (__tmp > 65535)
    1110:	69 a9       	ldd	r22, Y+49	; 0x31
    1112:	7a a9       	ldd	r23, Y+50	; 0x32
    1114:	8b a9       	ldd	r24, Y+51	; 0x33
    1116:	9c a9       	ldd	r25, Y+52	; 0x34
    1118:	20 e0       	ldi	r18, 0x00	; 0
    111a:	3f ef       	ldi	r19, 0xFF	; 255
    111c:	4f e7       	ldi	r20, 0x7F	; 127
    111e:	57 e4       	ldi	r21, 0x47	; 71
    1120:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1124:	18 16       	cp	r1, r24
    1126:	4c f5       	brge	.+82     	; 0x117a <main+0x644>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1128:	6d a9       	ldd	r22, Y+53	; 0x35
    112a:	7e a9       	ldd	r23, Y+54	; 0x36
    112c:	8f a9       	ldd	r24, Y+55	; 0x37
    112e:	98 ad       	ldd	r25, Y+56	; 0x38
    1130:	20 e0       	ldi	r18, 0x00	; 0
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	40 e2       	ldi	r20, 0x20	; 32
    1136:	51 e4       	ldi	r21, 0x41	; 65
    1138:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    113c:	dc 01       	movw	r26, r24
    113e:	cb 01       	movw	r24, r22
    1140:	bc 01       	movw	r22, r24
    1142:	cd 01       	movw	r24, r26
    1144:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1148:	dc 01       	movw	r26, r24
    114a:	cb 01       	movw	r24, r22
    114c:	98 ab       	std	Y+48, r25	; 0x30
    114e:	8f a7       	std	Y+47, r24	; 0x2f
    1150:	0f c0       	rjmp	.+30     	; 0x1170 <main+0x63a>
    1152:	88 ec       	ldi	r24, 0xC8	; 200
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	9e a7       	std	Y+46, r25	; 0x2e
    1158:	8d a7       	std	Y+45, r24	; 0x2d
    115a:	8d a5       	ldd	r24, Y+45	; 0x2d
    115c:	9e a5       	ldd	r25, Y+46	; 0x2e
    115e:	01 97       	sbiw	r24, 0x01	; 1
    1160:	f1 f7       	brne	.-4      	; 0x115e <main+0x628>
    1162:	9e a7       	std	Y+46, r25	; 0x2e
    1164:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1166:	8f a5       	ldd	r24, Y+47	; 0x2f
    1168:	98 a9       	ldd	r25, Y+48	; 0x30
    116a:	01 97       	sbiw	r24, 0x01	; 1
    116c:	98 ab       	std	Y+48, r25	; 0x30
    116e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1170:	8f a5       	ldd	r24, Y+47	; 0x2f
    1172:	98 a9       	ldd	r25, Y+48	; 0x30
    1174:	00 97       	sbiw	r24, 0x00	; 0
    1176:	69 f7       	brne	.-38     	; 0x1152 <main+0x61c>
    1178:	14 c0       	rjmp	.+40     	; 0x11a2 <main+0x66c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    117a:	69 a9       	ldd	r22, Y+49	; 0x31
    117c:	7a a9       	ldd	r23, Y+50	; 0x32
    117e:	8b a9       	ldd	r24, Y+51	; 0x33
    1180:	9c a9       	ldd	r25, Y+52	; 0x34
    1182:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1186:	dc 01       	movw	r26, r24
    1188:	cb 01       	movw	r24, r22
    118a:	98 ab       	std	Y+48, r25	; 0x30
    118c:	8f a7       	std	Y+47, r24	; 0x2f
    118e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1190:	98 a9       	ldd	r25, Y+48	; 0x30
    1192:	9c a7       	std	Y+44, r25	; 0x2c
    1194:	8b a7       	std	Y+43, r24	; 0x2b
    1196:	8b a5       	ldd	r24, Y+43	; 0x2b
    1198:	9c a5       	ldd	r25, Y+44	; 0x2c
    119a:	01 97       	sbiw	r24, 0x01	; 1
    119c:	f1 f7       	brne	.-4      	; 0x119a <main+0x664>
    119e:	9c a7       	std	Y+44, r25	; 0x2c
    11a0:	8b a7       	std	Y+43, r24	; 0x2b
_delay_ms(500);
SnakeEffect300ms();
    11a2:	0e 94 38 11 	call	0x2270	; 0x2270 <SnakeEffect300ms>
UNSETPORTA();
    11a6:	eb e3       	ldi	r30, 0x3B	; 59
    11a8:	f0 e0       	ldi	r31, 0x00	; 0
    11aa:	10 82       	st	Z, r1
    11ac:	80 e0       	ldi	r24, 0x00	; 0
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	aa ef       	ldi	r26, 0xFA	; 250
    11b2:	b3 e4       	ldi	r27, 0x43	; 67
    11b4:	8f a3       	std	Y+39, r24	; 0x27
    11b6:	98 a7       	std	Y+40, r25	; 0x28
    11b8:	a9 a7       	std	Y+41, r26	; 0x29
    11ba:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11bc:	6f a1       	ldd	r22, Y+39	; 0x27
    11be:	78 a5       	ldd	r23, Y+40	; 0x28
    11c0:	89 a5       	ldd	r24, Y+41	; 0x29
    11c2:	9a a5       	ldd	r25, Y+42	; 0x2a
    11c4:	20 e0       	ldi	r18, 0x00	; 0
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	4a ef       	ldi	r20, 0xFA	; 250
    11ca:	54 e4       	ldi	r21, 0x44	; 68
    11cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11d0:	dc 01       	movw	r26, r24
    11d2:	cb 01       	movw	r24, r22
    11d4:	8b a3       	std	Y+35, r24	; 0x23
    11d6:	9c a3       	std	Y+36, r25	; 0x24
    11d8:	ad a3       	std	Y+37, r26	; 0x25
    11da:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    11dc:	6b a1       	ldd	r22, Y+35	; 0x23
    11de:	7c a1       	ldd	r23, Y+36	; 0x24
    11e0:	8d a1       	ldd	r24, Y+37	; 0x25
    11e2:	9e a1       	ldd	r25, Y+38	; 0x26
    11e4:	20 e0       	ldi	r18, 0x00	; 0
    11e6:	30 e0       	ldi	r19, 0x00	; 0
    11e8:	40 e8       	ldi	r20, 0x80	; 128
    11ea:	5f e3       	ldi	r21, 0x3F	; 63
    11ec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11f0:	88 23       	and	r24, r24
    11f2:	2c f4       	brge	.+10     	; 0x11fe <main+0x6c8>
		__ticks = 1;
    11f4:	81 e0       	ldi	r24, 0x01	; 1
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	9a a3       	std	Y+34, r25	; 0x22
    11fa:	89 a3       	std	Y+33, r24	; 0x21
    11fc:	3f c0       	rjmp	.+126    	; 0x127c <main+0x746>
	else if (__tmp > 65535)
    11fe:	6b a1       	ldd	r22, Y+35	; 0x23
    1200:	7c a1       	ldd	r23, Y+36	; 0x24
    1202:	8d a1       	ldd	r24, Y+37	; 0x25
    1204:	9e a1       	ldd	r25, Y+38	; 0x26
    1206:	20 e0       	ldi	r18, 0x00	; 0
    1208:	3f ef       	ldi	r19, 0xFF	; 255
    120a:	4f e7       	ldi	r20, 0x7F	; 127
    120c:	57 e4       	ldi	r21, 0x47	; 71
    120e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1212:	18 16       	cp	r1, r24
    1214:	4c f5       	brge	.+82     	; 0x1268 <main+0x732>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1216:	6f a1       	ldd	r22, Y+39	; 0x27
    1218:	78 a5       	ldd	r23, Y+40	; 0x28
    121a:	89 a5       	ldd	r24, Y+41	; 0x29
    121c:	9a a5       	ldd	r25, Y+42	; 0x2a
    121e:	20 e0       	ldi	r18, 0x00	; 0
    1220:	30 e0       	ldi	r19, 0x00	; 0
    1222:	40 e2       	ldi	r20, 0x20	; 32
    1224:	51 e4       	ldi	r21, 0x41	; 65
    1226:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    122a:	dc 01       	movw	r26, r24
    122c:	cb 01       	movw	r24, r22
    122e:	bc 01       	movw	r22, r24
    1230:	cd 01       	movw	r24, r26
    1232:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1236:	dc 01       	movw	r26, r24
    1238:	cb 01       	movw	r24, r22
    123a:	9a a3       	std	Y+34, r25	; 0x22
    123c:	89 a3       	std	Y+33, r24	; 0x21
    123e:	0f c0       	rjmp	.+30     	; 0x125e <main+0x728>
    1240:	88 ec       	ldi	r24, 0xC8	; 200
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	98 a3       	std	Y+32, r25	; 0x20
    1246:	8f 8f       	std	Y+31, r24	; 0x1f
    1248:	8f 8d       	ldd	r24, Y+31	; 0x1f
    124a:	98 a1       	ldd	r25, Y+32	; 0x20
    124c:	01 97       	sbiw	r24, 0x01	; 1
    124e:	f1 f7       	brne	.-4      	; 0x124c <main+0x716>
    1250:	98 a3       	std	Y+32, r25	; 0x20
    1252:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1254:	89 a1       	ldd	r24, Y+33	; 0x21
    1256:	9a a1       	ldd	r25, Y+34	; 0x22
    1258:	01 97       	sbiw	r24, 0x01	; 1
    125a:	9a a3       	std	Y+34, r25	; 0x22
    125c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    125e:	89 a1       	ldd	r24, Y+33	; 0x21
    1260:	9a a1       	ldd	r25, Y+34	; 0x22
    1262:	00 97       	sbiw	r24, 0x00	; 0
    1264:	69 f7       	brne	.-38     	; 0x1240 <main+0x70a>
    1266:	14 c0       	rjmp	.+40     	; 0x1290 <main+0x75a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1268:	6b a1       	ldd	r22, Y+35	; 0x23
    126a:	7c a1       	ldd	r23, Y+36	; 0x24
    126c:	8d a1       	ldd	r24, Y+37	; 0x25
    126e:	9e a1       	ldd	r25, Y+38	; 0x26
    1270:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1274:	dc 01       	movw	r26, r24
    1276:	cb 01       	movw	r24, r22
    1278:	9a a3       	std	Y+34, r25	; 0x22
    127a:	89 a3       	std	Y+33, r24	; 0x21
    127c:	89 a1       	ldd	r24, Y+33	; 0x21
    127e:	9a a1       	ldd	r25, Y+34	; 0x22
    1280:	9e 8f       	std	Y+30, r25	; 0x1e
    1282:	8d 8f       	std	Y+29, r24	; 0x1d
    1284:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1286:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1288:	01 97       	sbiw	r24, 0x01	; 1
    128a:	f1 f7       	brne	.-4      	; 0x1288 <main+0x752>
    128c:	9e 8f       	std	Y+30, r25	; 0x1e
    128e:	8d 8f       	std	Y+29, r24	; 0x1d
_delay_ms(500);
PingPong250ms();
    1290:	0e 94 3d 10 	call	0x207a	; 0x207a <PingPong250ms>
UNSETPORTA();
    1294:	eb e3       	ldi	r30, 0x3B	; 59
    1296:	f0 e0       	ldi	r31, 0x00	; 0
    1298:	10 82       	st	Z, r1
    129a:	80 e0       	ldi	r24, 0x00	; 0
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	aa ef       	ldi	r26, 0xFA	; 250
    12a0:	b3 e4       	ldi	r27, 0x43	; 67
    12a2:	89 8f       	std	Y+25, r24	; 0x19
    12a4:	9a 8f       	std	Y+26, r25	; 0x1a
    12a6:	ab 8f       	std	Y+27, r26	; 0x1b
    12a8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12aa:	69 8d       	ldd	r22, Y+25	; 0x19
    12ac:	7a 8d       	ldd	r23, Y+26	; 0x1a
    12ae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12b0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12b2:	20 e0       	ldi	r18, 0x00	; 0
    12b4:	30 e0       	ldi	r19, 0x00	; 0
    12b6:	4a ef       	ldi	r20, 0xFA	; 250
    12b8:	54 e4       	ldi	r21, 0x44	; 68
    12ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12be:	dc 01       	movw	r26, r24
    12c0:	cb 01       	movw	r24, r22
    12c2:	8d 8b       	std	Y+21, r24	; 0x15
    12c4:	9e 8b       	std	Y+22, r25	; 0x16
    12c6:	af 8b       	std	Y+23, r26	; 0x17
    12c8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    12ca:	6d 89       	ldd	r22, Y+21	; 0x15
    12cc:	7e 89       	ldd	r23, Y+22	; 0x16
    12ce:	8f 89       	ldd	r24, Y+23	; 0x17
    12d0:	98 8d       	ldd	r25, Y+24	; 0x18
    12d2:	20 e0       	ldi	r18, 0x00	; 0
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	40 e8       	ldi	r20, 0x80	; 128
    12d8:	5f e3       	ldi	r21, 0x3F	; 63
    12da:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    12de:	88 23       	and	r24, r24
    12e0:	2c f4       	brge	.+10     	; 0x12ec <main+0x7b6>
		__ticks = 1;
    12e2:	81 e0       	ldi	r24, 0x01	; 1
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	9c 8b       	std	Y+20, r25	; 0x14
    12e8:	8b 8b       	std	Y+19, r24	; 0x13
    12ea:	3f c0       	rjmp	.+126    	; 0x136a <main+0x834>
	else if (__tmp > 65535)
    12ec:	6d 89       	ldd	r22, Y+21	; 0x15
    12ee:	7e 89       	ldd	r23, Y+22	; 0x16
    12f0:	8f 89       	ldd	r24, Y+23	; 0x17
    12f2:	98 8d       	ldd	r25, Y+24	; 0x18
    12f4:	20 e0       	ldi	r18, 0x00	; 0
    12f6:	3f ef       	ldi	r19, 0xFF	; 255
    12f8:	4f e7       	ldi	r20, 0x7F	; 127
    12fa:	57 e4       	ldi	r21, 0x47	; 71
    12fc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1300:	18 16       	cp	r1, r24
    1302:	4c f5       	brge	.+82     	; 0x1356 <main+0x820>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1304:	69 8d       	ldd	r22, Y+25	; 0x19
    1306:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1308:	8b 8d       	ldd	r24, Y+27	; 0x1b
    130a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    130c:	20 e0       	ldi	r18, 0x00	; 0
    130e:	30 e0       	ldi	r19, 0x00	; 0
    1310:	40 e2       	ldi	r20, 0x20	; 32
    1312:	51 e4       	ldi	r21, 0x41	; 65
    1314:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1318:	dc 01       	movw	r26, r24
    131a:	cb 01       	movw	r24, r22
    131c:	bc 01       	movw	r22, r24
    131e:	cd 01       	movw	r24, r26
    1320:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1324:	dc 01       	movw	r26, r24
    1326:	cb 01       	movw	r24, r22
    1328:	9c 8b       	std	Y+20, r25	; 0x14
    132a:	8b 8b       	std	Y+19, r24	; 0x13
    132c:	0f c0       	rjmp	.+30     	; 0x134c <main+0x816>
    132e:	88 ec       	ldi	r24, 0xC8	; 200
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	9a 8b       	std	Y+18, r25	; 0x12
    1334:	89 8b       	std	Y+17, r24	; 0x11
    1336:	89 89       	ldd	r24, Y+17	; 0x11
    1338:	9a 89       	ldd	r25, Y+18	; 0x12
    133a:	01 97       	sbiw	r24, 0x01	; 1
    133c:	f1 f7       	brne	.-4      	; 0x133a <main+0x804>
    133e:	9a 8b       	std	Y+18, r25	; 0x12
    1340:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1342:	8b 89       	ldd	r24, Y+19	; 0x13
    1344:	9c 89       	ldd	r25, Y+20	; 0x14
    1346:	01 97       	sbiw	r24, 0x01	; 1
    1348:	9c 8b       	std	Y+20, r25	; 0x14
    134a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    134c:	8b 89       	ldd	r24, Y+19	; 0x13
    134e:	9c 89       	ldd	r25, Y+20	; 0x14
    1350:	00 97       	sbiw	r24, 0x00	; 0
    1352:	69 f7       	brne	.-38     	; 0x132e <main+0x7f8>
    1354:	14 c0       	rjmp	.+40     	; 0x137e <main+0x848>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1356:	6d 89       	ldd	r22, Y+21	; 0x15
    1358:	7e 89       	ldd	r23, Y+22	; 0x16
    135a:	8f 89       	ldd	r24, Y+23	; 0x17
    135c:	98 8d       	ldd	r25, Y+24	; 0x18
    135e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1362:	dc 01       	movw	r26, r24
    1364:	cb 01       	movw	r24, r22
    1366:	9c 8b       	std	Y+20, r25	; 0x14
    1368:	8b 8b       	std	Y+19, r24	; 0x13
    136a:	8b 89       	ldd	r24, Y+19	; 0x13
    136c:	9c 89       	ldd	r25, Y+20	; 0x14
    136e:	98 8b       	std	Y+16, r25	; 0x10
    1370:	8f 87       	std	Y+15, r24	; 0x0f
    1372:	8f 85       	ldd	r24, Y+15	; 0x0f
    1374:	98 89       	ldd	r25, Y+16	; 0x10
    1376:	01 97       	sbiw	r24, 0x01	; 1
    1378:	f1 f7       	brne	.-4      	; 0x1376 <main+0x840>
    137a:	98 8b       	std	Y+16, r25	; 0x10
    137c:	8f 87       	std	Y+15, r24	; 0x0f
_delay_ms(500);
ConverDiver300ms();
    137e:	0e 94 e0 11 	call	0x23c0	; 0x23c0 <ConverDiver300ms>
UNSETPORTA();
    1382:	eb e3       	ldi	r30, 0x3B	; 59
    1384:	f0 e0       	ldi	r31, 0x00	; 0
    1386:	10 82       	st	Z, r1
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	aa ef       	ldi	r26, 0xFA	; 250
    138e:	b3 e4       	ldi	r27, 0x43	; 67
    1390:	8b 87       	std	Y+11, r24	; 0x0b
    1392:	9c 87       	std	Y+12, r25	; 0x0c
    1394:	ad 87       	std	Y+13, r26	; 0x0d
    1396:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1398:	6b 85       	ldd	r22, Y+11	; 0x0b
    139a:	7c 85       	ldd	r23, Y+12	; 0x0c
    139c:	8d 85       	ldd	r24, Y+13	; 0x0d
    139e:	9e 85       	ldd	r25, Y+14	; 0x0e
    13a0:	20 e0       	ldi	r18, 0x00	; 0
    13a2:	30 e0       	ldi	r19, 0x00	; 0
    13a4:	4a ef       	ldi	r20, 0xFA	; 250
    13a6:	54 e4       	ldi	r21, 0x44	; 68
    13a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13ac:	dc 01       	movw	r26, r24
    13ae:	cb 01       	movw	r24, r22
    13b0:	8f 83       	std	Y+7, r24	; 0x07
    13b2:	98 87       	std	Y+8, r25	; 0x08
    13b4:	a9 87       	std	Y+9, r26	; 0x09
    13b6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    13b8:	6f 81       	ldd	r22, Y+7	; 0x07
    13ba:	78 85       	ldd	r23, Y+8	; 0x08
    13bc:	89 85       	ldd	r24, Y+9	; 0x09
    13be:	9a 85       	ldd	r25, Y+10	; 0x0a
    13c0:	20 e0       	ldi	r18, 0x00	; 0
    13c2:	30 e0       	ldi	r19, 0x00	; 0
    13c4:	40 e8       	ldi	r20, 0x80	; 128
    13c6:	5f e3       	ldi	r21, 0x3F	; 63
    13c8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13cc:	88 23       	and	r24, r24
    13ce:	2c f4       	brge	.+10     	; 0x13da <main+0x8a4>
		__ticks = 1;
    13d0:	81 e0       	ldi	r24, 0x01	; 1
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	9e 83       	std	Y+6, r25	; 0x06
    13d6:	8d 83       	std	Y+5, r24	; 0x05
    13d8:	3f c0       	rjmp	.+126    	; 0x1458 <main+0x922>
	else if (__tmp > 65535)
    13da:	6f 81       	ldd	r22, Y+7	; 0x07
    13dc:	78 85       	ldd	r23, Y+8	; 0x08
    13de:	89 85       	ldd	r24, Y+9	; 0x09
    13e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    13e2:	20 e0       	ldi	r18, 0x00	; 0
    13e4:	3f ef       	ldi	r19, 0xFF	; 255
    13e6:	4f e7       	ldi	r20, 0x7F	; 127
    13e8:	57 e4       	ldi	r21, 0x47	; 71
    13ea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13ee:	18 16       	cp	r1, r24
    13f0:	4c f5       	brge	.+82     	; 0x1444 <main+0x90e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13f2:	6b 85       	ldd	r22, Y+11	; 0x0b
    13f4:	7c 85       	ldd	r23, Y+12	; 0x0c
    13f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    13f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    13fa:	20 e0       	ldi	r18, 0x00	; 0
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	40 e2       	ldi	r20, 0x20	; 32
    1400:	51 e4       	ldi	r21, 0x41	; 65
    1402:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1406:	dc 01       	movw	r26, r24
    1408:	cb 01       	movw	r24, r22
    140a:	bc 01       	movw	r22, r24
    140c:	cd 01       	movw	r24, r26
    140e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1412:	dc 01       	movw	r26, r24
    1414:	cb 01       	movw	r24, r22
    1416:	9e 83       	std	Y+6, r25	; 0x06
    1418:	8d 83       	std	Y+5, r24	; 0x05
    141a:	0f c0       	rjmp	.+30     	; 0x143a <main+0x904>
    141c:	88 ec       	ldi	r24, 0xC8	; 200
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	9c 83       	std	Y+4, r25	; 0x04
    1422:	8b 83       	std	Y+3, r24	; 0x03
    1424:	8b 81       	ldd	r24, Y+3	; 0x03
    1426:	9c 81       	ldd	r25, Y+4	; 0x04
    1428:	01 97       	sbiw	r24, 0x01	; 1
    142a:	f1 f7       	brne	.-4      	; 0x1428 <main+0x8f2>
    142c:	9c 83       	std	Y+4, r25	; 0x04
    142e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1430:	8d 81       	ldd	r24, Y+5	; 0x05
    1432:	9e 81       	ldd	r25, Y+6	; 0x06
    1434:	01 97       	sbiw	r24, 0x01	; 1
    1436:	9e 83       	std	Y+6, r25	; 0x06
    1438:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    143a:	8d 81       	ldd	r24, Y+5	; 0x05
    143c:	9e 81       	ldd	r25, Y+6	; 0x06
    143e:	00 97       	sbiw	r24, 0x00	; 0
    1440:	69 f7       	brne	.-38     	; 0x141c <main+0x8e6>
    1442:	86 cb       	rjmp	.-2292   	; 0xb50 <main+0x1a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1444:	6f 81       	ldd	r22, Y+7	; 0x07
    1446:	78 85       	ldd	r23, Y+8	; 0x08
    1448:	89 85       	ldd	r24, Y+9	; 0x09
    144a:	9a 85       	ldd	r25, Y+10	; 0x0a
    144c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1450:	dc 01       	movw	r26, r24
    1452:	cb 01       	movw	r24, r22
    1454:	9e 83       	std	Y+6, r25	; 0x06
    1456:	8d 83       	std	Y+5, r24	; 0x05
    1458:	8d 81       	ldd	r24, Y+5	; 0x05
    145a:	9e 81       	ldd	r25, Y+6	; 0x06
    145c:	9a 83       	std	Y+2, r25	; 0x02
    145e:	89 83       	std	Y+1, r24	; 0x01
    1460:	89 81       	ldd	r24, Y+1	; 0x01
    1462:	9a 81       	ldd	r25, Y+2	; 0x02
    1464:	01 97       	sbiw	r24, 0x01	; 1
    1466:	f1 f7       	brne	.-4      	; 0x1464 <main+0x92e>
    1468:	9a 83       	std	Y+2, r25	; 0x02
    146a:	89 83       	std	Y+1, r24	; 0x01
    146c:	71 cb       	rjmp	.-2334   	; 0xb50 <main+0x1a>

0000146e <FLashingEvrey500ms>:

return 0 ;
}


void FLashingEvrey500ms(void){
    146e:	df 93       	push	r29
    1470:	cf 93       	push	r28
    1472:	cd b7       	in	r28, 0x3d	; 61
    1474:	de b7       	in	r29, 0x3e	; 62
    1476:	6c 97       	sbiw	r28, 0x1c	; 28
    1478:	0f b6       	in	r0, 0x3f	; 63
    147a:	f8 94       	cli
    147c:	de bf       	out	0x3e, r29	; 62
    147e:	0f be       	out	0x3f, r0	; 63
    1480:	cd bf       	out	0x3d, r28	; 61

DDRA =0xff;
    1482:	ea e3       	ldi	r30, 0x3A	; 58
    1484:	f0 e0       	ldi	r31, 0x00	; 0
    1486:	8f ef       	ldi	r24, 0xFF	; 255
    1488:	80 83       	st	Z, r24
PORTA = 0xff;
    148a:	eb e3       	ldi	r30, 0x3B	; 59
    148c:	f0 e0       	ldi	r31, 0x00	; 0
    148e:	8f ef       	ldi	r24, 0xFF	; 255
    1490:	80 83       	st	Z, r24
    1492:	80 e0       	ldi	r24, 0x00	; 0
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	aa ef       	ldi	r26, 0xFA	; 250
    1498:	b3 e4       	ldi	r27, 0x43	; 67
    149a:	89 8f       	std	Y+25, r24	; 0x19
    149c:	9a 8f       	std	Y+26, r25	; 0x1a
    149e:	ab 8f       	std	Y+27, r26	; 0x1b
    14a0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14a2:	69 8d       	ldd	r22, Y+25	; 0x19
    14a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	4a ef       	ldi	r20, 0xFA	; 250
    14b0:	54 e4       	ldi	r21, 0x44	; 68
    14b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14b6:	dc 01       	movw	r26, r24
    14b8:	cb 01       	movw	r24, r22
    14ba:	8d 8b       	std	Y+21, r24	; 0x15
    14bc:	9e 8b       	std	Y+22, r25	; 0x16
    14be:	af 8b       	std	Y+23, r26	; 0x17
    14c0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    14c2:	6d 89       	ldd	r22, Y+21	; 0x15
    14c4:	7e 89       	ldd	r23, Y+22	; 0x16
    14c6:	8f 89       	ldd	r24, Y+23	; 0x17
    14c8:	98 8d       	ldd	r25, Y+24	; 0x18
    14ca:	20 e0       	ldi	r18, 0x00	; 0
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	40 e8       	ldi	r20, 0x80	; 128
    14d0:	5f e3       	ldi	r21, 0x3F	; 63
    14d2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14d6:	88 23       	and	r24, r24
    14d8:	2c f4       	brge	.+10     	; 0x14e4 <FLashingEvrey500ms+0x76>
		__ticks = 1;
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	9c 8b       	std	Y+20, r25	; 0x14
    14e0:	8b 8b       	std	Y+19, r24	; 0x13
    14e2:	3f c0       	rjmp	.+126    	; 0x1562 <FLashingEvrey500ms+0xf4>
	else if (__tmp > 65535)
    14e4:	6d 89       	ldd	r22, Y+21	; 0x15
    14e6:	7e 89       	ldd	r23, Y+22	; 0x16
    14e8:	8f 89       	ldd	r24, Y+23	; 0x17
    14ea:	98 8d       	ldd	r25, Y+24	; 0x18
    14ec:	20 e0       	ldi	r18, 0x00	; 0
    14ee:	3f ef       	ldi	r19, 0xFF	; 255
    14f0:	4f e7       	ldi	r20, 0x7F	; 127
    14f2:	57 e4       	ldi	r21, 0x47	; 71
    14f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14f8:	18 16       	cp	r1, r24
    14fa:	4c f5       	brge	.+82     	; 0x154e <FLashingEvrey500ms+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14fc:	69 8d       	ldd	r22, Y+25	; 0x19
    14fe:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1500:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1502:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1504:	20 e0       	ldi	r18, 0x00	; 0
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	40 e2       	ldi	r20, 0x20	; 32
    150a:	51 e4       	ldi	r21, 0x41	; 65
    150c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1510:	dc 01       	movw	r26, r24
    1512:	cb 01       	movw	r24, r22
    1514:	bc 01       	movw	r22, r24
    1516:	cd 01       	movw	r24, r26
    1518:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    151c:	dc 01       	movw	r26, r24
    151e:	cb 01       	movw	r24, r22
    1520:	9c 8b       	std	Y+20, r25	; 0x14
    1522:	8b 8b       	std	Y+19, r24	; 0x13
    1524:	0f c0       	rjmp	.+30     	; 0x1544 <FLashingEvrey500ms+0xd6>
    1526:	88 ec       	ldi	r24, 0xC8	; 200
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	9a 8b       	std	Y+18, r25	; 0x12
    152c:	89 8b       	std	Y+17, r24	; 0x11
    152e:	89 89       	ldd	r24, Y+17	; 0x11
    1530:	9a 89       	ldd	r25, Y+18	; 0x12
    1532:	01 97       	sbiw	r24, 0x01	; 1
    1534:	f1 f7       	brne	.-4      	; 0x1532 <FLashingEvrey500ms+0xc4>
    1536:	9a 8b       	std	Y+18, r25	; 0x12
    1538:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    153a:	8b 89       	ldd	r24, Y+19	; 0x13
    153c:	9c 89       	ldd	r25, Y+20	; 0x14
    153e:	01 97       	sbiw	r24, 0x01	; 1
    1540:	9c 8b       	std	Y+20, r25	; 0x14
    1542:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1544:	8b 89       	ldd	r24, Y+19	; 0x13
    1546:	9c 89       	ldd	r25, Y+20	; 0x14
    1548:	00 97       	sbiw	r24, 0x00	; 0
    154a:	69 f7       	brne	.-38     	; 0x1526 <FLashingEvrey500ms+0xb8>
    154c:	14 c0       	rjmp	.+40     	; 0x1576 <FLashingEvrey500ms+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    154e:	6d 89       	ldd	r22, Y+21	; 0x15
    1550:	7e 89       	ldd	r23, Y+22	; 0x16
    1552:	8f 89       	ldd	r24, Y+23	; 0x17
    1554:	98 8d       	ldd	r25, Y+24	; 0x18
    1556:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    155a:	dc 01       	movw	r26, r24
    155c:	cb 01       	movw	r24, r22
    155e:	9c 8b       	std	Y+20, r25	; 0x14
    1560:	8b 8b       	std	Y+19, r24	; 0x13
    1562:	8b 89       	ldd	r24, Y+19	; 0x13
    1564:	9c 89       	ldd	r25, Y+20	; 0x14
    1566:	98 8b       	std	Y+16, r25	; 0x10
    1568:	8f 87       	std	Y+15, r24	; 0x0f
    156a:	8f 85       	ldd	r24, Y+15	; 0x0f
    156c:	98 89       	ldd	r25, Y+16	; 0x10
    156e:	01 97       	sbiw	r24, 0x01	; 1
    1570:	f1 f7       	brne	.-4      	; 0x156e <FLashingEvrey500ms+0x100>
    1572:	98 8b       	std	Y+16, r25	; 0x10
    1574:	8f 87       	std	Y+15, r24	; 0x0f
_delay_ms(500);
PORTA=0x00;
    1576:	eb e3       	ldi	r30, 0x3B	; 59
    1578:	f0 e0       	ldi	r31, 0x00	; 0
    157a:	10 82       	st	Z, r1
    157c:	80 e0       	ldi	r24, 0x00	; 0
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	aa ef       	ldi	r26, 0xFA	; 250
    1582:	b3 e4       	ldi	r27, 0x43	; 67
    1584:	8b 87       	std	Y+11, r24	; 0x0b
    1586:	9c 87       	std	Y+12, r25	; 0x0c
    1588:	ad 87       	std	Y+13, r26	; 0x0d
    158a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    158c:	6b 85       	ldd	r22, Y+11	; 0x0b
    158e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1590:	8d 85       	ldd	r24, Y+13	; 0x0d
    1592:	9e 85       	ldd	r25, Y+14	; 0x0e
    1594:	20 e0       	ldi	r18, 0x00	; 0
    1596:	30 e0       	ldi	r19, 0x00	; 0
    1598:	4a ef       	ldi	r20, 0xFA	; 250
    159a:	54 e4       	ldi	r21, 0x44	; 68
    159c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15a0:	dc 01       	movw	r26, r24
    15a2:	cb 01       	movw	r24, r22
    15a4:	8f 83       	std	Y+7, r24	; 0x07
    15a6:	98 87       	std	Y+8, r25	; 0x08
    15a8:	a9 87       	std	Y+9, r26	; 0x09
    15aa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    15ac:	6f 81       	ldd	r22, Y+7	; 0x07
    15ae:	78 85       	ldd	r23, Y+8	; 0x08
    15b0:	89 85       	ldd	r24, Y+9	; 0x09
    15b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    15b4:	20 e0       	ldi	r18, 0x00	; 0
    15b6:	30 e0       	ldi	r19, 0x00	; 0
    15b8:	40 e8       	ldi	r20, 0x80	; 128
    15ba:	5f e3       	ldi	r21, 0x3F	; 63
    15bc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15c0:	88 23       	and	r24, r24
    15c2:	2c f4       	brge	.+10     	; 0x15ce <FLashingEvrey500ms+0x160>
		__ticks = 1;
    15c4:	81 e0       	ldi	r24, 0x01	; 1
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	9e 83       	std	Y+6, r25	; 0x06
    15ca:	8d 83       	std	Y+5, r24	; 0x05
    15cc:	3f c0       	rjmp	.+126    	; 0x164c <FLashingEvrey500ms+0x1de>
	else if (__tmp > 65535)
    15ce:	6f 81       	ldd	r22, Y+7	; 0x07
    15d0:	78 85       	ldd	r23, Y+8	; 0x08
    15d2:	89 85       	ldd	r24, Y+9	; 0x09
    15d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    15d6:	20 e0       	ldi	r18, 0x00	; 0
    15d8:	3f ef       	ldi	r19, 0xFF	; 255
    15da:	4f e7       	ldi	r20, 0x7F	; 127
    15dc:	57 e4       	ldi	r21, 0x47	; 71
    15de:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15e2:	18 16       	cp	r1, r24
    15e4:	4c f5       	brge	.+82     	; 0x1638 <FLashingEvrey500ms+0x1ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15e6:	6b 85       	ldd	r22, Y+11	; 0x0b
    15e8:	7c 85       	ldd	r23, Y+12	; 0x0c
    15ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    15ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    15ee:	20 e0       	ldi	r18, 0x00	; 0
    15f0:	30 e0       	ldi	r19, 0x00	; 0
    15f2:	40 e2       	ldi	r20, 0x20	; 32
    15f4:	51 e4       	ldi	r21, 0x41	; 65
    15f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15fa:	dc 01       	movw	r26, r24
    15fc:	cb 01       	movw	r24, r22
    15fe:	bc 01       	movw	r22, r24
    1600:	cd 01       	movw	r24, r26
    1602:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1606:	dc 01       	movw	r26, r24
    1608:	cb 01       	movw	r24, r22
    160a:	9e 83       	std	Y+6, r25	; 0x06
    160c:	8d 83       	std	Y+5, r24	; 0x05
    160e:	0f c0       	rjmp	.+30     	; 0x162e <FLashingEvrey500ms+0x1c0>
    1610:	88 ec       	ldi	r24, 0xC8	; 200
    1612:	90 e0       	ldi	r25, 0x00	; 0
    1614:	9c 83       	std	Y+4, r25	; 0x04
    1616:	8b 83       	std	Y+3, r24	; 0x03
    1618:	8b 81       	ldd	r24, Y+3	; 0x03
    161a:	9c 81       	ldd	r25, Y+4	; 0x04
    161c:	01 97       	sbiw	r24, 0x01	; 1
    161e:	f1 f7       	brne	.-4      	; 0x161c <FLashingEvrey500ms+0x1ae>
    1620:	9c 83       	std	Y+4, r25	; 0x04
    1622:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1624:	8d 81       	ldd	r24, Y+5	; 0x05
    1626:	9e 81       	ldd	r25, Y+6	; 0x06
    1628:	01 97       	sbiw	r24, 0x01	; 1
    162a:	9e 83       	std	Y+6, r25	; 0x06
    162c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    162e:	8d 81       	ldd	r24, Y+5	; 0x05
    1630:	9e 81       	ldd	r25, Y+6	; 0x06
    1632:	00 97       	sbiw	r24, 0x00	; 0
    1634:	69 f7       	brne	.-38     	; 0x1610 <FLashingEvrey500ms+0x1a2>
    1636:	14 c0       	rjmp	.+40     	; 0x1660 <FLashingEvrey500ms+0x1f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1638:	6f 81       	ldd	r22, Y+7	; 0x07
    163a:	78 85       	ldd	r23, Y+8	; 0x08
    163c:	89 85       	ldd	r24, Y+9	; 0x09
    163e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1640:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1644:	dc 01       	movw	r26, r24
    1646:	cb 01       	movw	r24, r22
    1648:	9e 83       	std	Y+6, r25	; 0x06
    164a:	8d 83       	std	Y+5, r24	; 0x05
    164c:	8d 81       	ldd	r24, Y+5	; 0x05
    164e:	9e 81       	ldd	r25, Y+6	; 0x06
    1650:	9a 83       	std	Y+2, r25	; 0x02
    1652:	89 83       	std	Y+1, r24	; 0x01
    1654:	89 81       	ldd	r24, Y+1	; 0x01
    1656:	9a 81       	ldd	r25, Y+2	; 0x02
    1658:	01 97       	sbiw	r24, 0x01	; 1
    165a:	f1 f7       	brne	.-4      	; 0x1658 <FLashingEvrey500ms+0x1ea>
    165c:	9a 83       	std	Y+2, r25	; 0x02
    165e:	89 83       	std	Y+1, r24	; 0x01
_delay_ms(500);

}
    1660:	6c 96       	adiw	r28, 0x1c	; 28
    1662:	0f b6       	in	r0, 0x3f	; 63
    1664:	f8 94       	cli
    1666:	de bf       	out	0x3e, r29	; 62
    1668:	0f be       	out	0x3f, r0	; 63
    166a:	cd bf       	out	0x3d, r28	; 61
    166c:	cf 91       	pop	r28
    166e:	df 91       	pop	r29
    1670:	08 95       	ret

00001672 <ShiftLeft250ms>:

void ShiftLeft250ms(void){
    1672:	df 93       	push	r29
    1674:	cf 93       	push	r28
    1676:	cd b7       	in	r28, 0x3d	; 61
    1678:	de b7       	in	r29, 0x3e	; 62
    167a:	6e 97       	sbiw	r28, 0x1e	; 30
    167c:	0f b6       	in	r0, 0x3f	; 63
    167e:	f8 94       	cli
    1680:	de bf       	out	0x3e, r29	; 62
    1682:	0f be       	out	0x3f, r0	; 63
    1684:	cd bf       	out	0x3d, r28	; 61
DDRA=0xff;
    1686:	ea e3       	ldi	r30, 0x3A	; 58
    1688:	f0 e0       	ldi	r31, 0x00	; 0
    168a:	8f ef       	ldi	r24, 0xFF	; 255
    168c:	80 83       	st	Z, r24
int i=0;
    168e:	1e 8e       	std	Y+30, r1	; 0x1e
    1690:	1d 8e       	std	Y+29, r1	; 0x1d
for(i=0;i<8;i++)
    1692:	1e 8e       	std	Y+30, r1	; 0x1e
    1694:	1d 8e       	std	Y+29, r1	; 0x1d
    1696:	09 c1       	rjmp	.+530    	; 0x18aa <ShiftLeft250ms+0x238>
{
	PORTA |=(1<<i);
    1698:	ab e3       	ldi	r26, 0x3B	; 59
    169a:	b0 e0       	ldi	r27, 0x00	; 0
    169c:	eb e3       	ldi	r30, 0x3B	; 59
    169e:	f0 e0       	ldi	r31, 0x00	; 0
    16a0:	80 81       	ld	r24, Z
    16a2:	28 2f       	mov	r18, r24
    16a4:	81 e0       	ldi	r24, 0x01	; 1
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	0d 8c       	ldd	r0, Y+29	; 0x1d
    16aa:	02 c0       	rjmp	.+4      	; 0x16b0 <ShiftLeft250ms+0x3e>
    16ac:	88 0f       	add	r24, r24
    16ae:	99 1f       	adc	r25, r25
    16b0:	0a 94       	dec	r0
    16b2:	e2 f7       	brpl	.-8      	; 0x16ac <ShiftLeft250ms+0x3a>
    16b4:	82 2b       	or	r24, r18
    16b6:	8c 93       	st	X, r24
    16b8:	80 e0       	ldi	r24, 0x00	; 0
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	aa e7       	ldi	r26, 0x7A	; 122
    16be:	b3 e4       	ldi	r27, 0x43	; 67
    16c0:	89 8f       	std	Y+25, r24	; 0x19
    16c2:	9a 8f       	std	Y+26, r25	; 0x1a
    16c4:	ab 8f       	std	Y+27, r26	; 0x1b
    16c6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16c8:	69 8d       	ldd	r22, Y+25	; 0x19
    16ca:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16d0:	20 e0       	ldi	r18, 0x00	; 0
    16d2:	30 e0       	ldi	r19, 0x00	; 0
    16d4:	4a ef       	ldi	r20, 0xFA	; 250
    16d6:	54 e4       	ldi	r21, 0x44	; 68
    16d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16dc:	dc 01       	movw	r26, r24
    16de:	cb 01       	movw	r24, r22
    16e0:	8d 8b       	std	Y+21, r24	; 0x15
    16e2:	9e 8b       	std	Y+22, r25	; 0x16
    16e4:	af 8b       	std	Y+23, r26	; 0x17
    16e6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    16e8:	6d 89       	ldd	r22, Y+21	; 0x15
    16ea:	7e 89       	ldd	r23, Y+22	; 0x16
    16ec:	8f 89       	ldd	r24, Y+23	; 0x17
    16ee:	98 8d       	ldd	r25, Y+24	; 0x18
    16f0:	20 e0       	ldi	r18, 0x00	; 0
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	40 e8       	ldi	r20, 0x80	; 128
    16f6:	5f e3       	ldi	r21, 0x3F	; 63
    16f8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16fc:	88 23       	and	r24, r24
    16fe:	2c f4       	brge	.+10     	; 0x170a <ShiftLeft250ms+0x98>
		__ticks = 1;
    1700:	81 e0       	ldi	r24, 0x01	; 1
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	9c 8b       	std	Y+20, r25	; 0x14
    1706:	8b 8b       	std	Y+19, r24	; 0x13
    1708:	3f c0       	rjmp	.+126    	; 0x1788 <ShiftLeft250ms+0x116>
	else if (__tmp > 65535)
    170a:	6d 89       	ldd	r22, Y+21	; 0x15
    170c:	7e 89       	ldd	r23, Y+22	; 0x16
    170e:	8f 89       	ldd	r24, Y+23	; 0x17
    1710:	98 8d       	ldd	r25, Y+24	; 0x18
    1712:	20 e0       	ldi	r18, 0x00	; 0
    1714:	3f ef       	ldi	r19, 0xFF	; 255
    1716:	4f e7       	ldi	r20, 0x7F	; 127
    1718:	57 e4       	ldi	r21, 0x47	; 71
    171a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    171e:	18 16       	cp	r1, r24
    1720:	4c f5       	brge	.+82     	; 0x1774 <ShiftLeft250ms+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1722:	69 8d       	ldd	r22, Y+25	; 0x19
    1724:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1726:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1728:	9c 8d       	ldd	r25, Y+28	; 0x1c
    172a:	20 e0       	ldi	r18, 0x00	; 0
    172c:	30 e0       	ldi	r19, 0x00	; 0
    172e:	40 e2       	ldi	r20, 0x20	; 32
    1730:	51 e4       	ldi	r21, 0x41	; 65
    1732:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1736:	dc 01       	movw	r26, r24
    1738:	cb 01       	movw	r24, r22
    173a:	bc 01       	movw	r22, r24
    173c:	cd 01       	movw	r24, r26
    173e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1742:	dc 01       	movw	r26, r24
    1744:	cb 01       	movw	r24, r22
    1746:	9c 8b       	std	Y+20, r25	; 0x14
    1748:	8b 8b       	std	Y+19, r24	; 0x13
    174a:	0f c0       	rjmp	.+30     	; 0x176a <ShiftLeft250ms+0xf8>
    174c:	88 ec       	ldi	r24, 0xC8	; 200
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	9a 8b       	std	Y+18, r25	; 0x12
    1752:	89 8b       	std	Y+17, r24	; 0x11
    1754:	89 89       	ldd	r24, Y+17	; 0x11
    1756:	9a 89       	ldd	r25, Y+18	; 0x12
    1758:	01 97       	sbiw	r24, 0x01	; 1
    175a:	f1 f7       	brne	.-4      	; 0x1758 <ShiftLeft250ms+0xe6>
    175c:	9a 8b       	std	Y+18, r25	; 0x12
    175e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1760:	8b 89       	ldd	r24, Y+19	; 0x13
    1762:	9c 89       	ldd	r25, Y+20	; 0x14
    1764:	01 97       	sbiw	r24, 0x01	; 1
    1766:	9c 8b       	std	Y+20, r25	; 0x14
    1768:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    176a:	8b 89       	ldd	r24, Y+19	; 0x13
    176c:	9c 89       	ldd	r25, Y+20	; 0x14
    176e:	00 97       	sbiw	r24, 0x00	; 0
    1770:	69 f7       	brne	.-38     	; 0x174c <ShiftLeft250ms+0xda>
    1772:	14 c0       	rjmp	.+40     	; 0x179c <ShiftLeft250ms+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1774:	6d 89       	ldd	r22, Y+21	; 0x15
    1776:	7e 89       	ldd	r23, Y+22	; 0x16
    1778:	8f 89       	ldd	r24, Y+23	; 0x17
    177a:	98 8d       	ldd	r25, Y+24	; 0x18
    177c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1780:	dc 01       	movw	r26, r24
    1782:	cb 01       	movw	r24, r22
    1784:	9c 8b       	std	Y+20, r25	; 0x14
    1786:	8b 8b       	std	Y+19, r24	; 0x13
    1788:	8b 89       	ldd	r24, Y+19	; 0x13
    178a:	9c 89       	ldd	r25, Y+20	; 0x14
    178c:	98 8b       	std	Y+16, r25	; 0x10
    178e:	8f 87       	std	Y+15, r24	; 0x0f
    1790:	8f 85       	ldd	r24, Y+15	; 0x0f
    1792:	98 89       	ldd	r25, Y+16	; 0x10
    1794:	01 97       	sbiw	r24, 0x01	; 1
    1796:	f1 f7       	brne	.-4      	; 0x1794 <ShiftLeft250ms+0x122>
    1798:	98 8b       	std	Y+16, r25	; 0x10
    179a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(250);
    PORTA &= (1<<i);
    179c:	ab e3       	ldi	r26, 0x3B	; 59
    179e:	b0 e0       	ldi	r27, 0x00	; 0
    17a0:	eb e3       	ldi	r30, 0x3B	; 59
    17a2:	f0 e0       	ldi	r31, 0x00	; 0
    17a4:	80 81       	ld	r24, Z
    17a6:	28 2f       	mov	r18, r24
    17a8:	81 e0       	ldi	r24, 0x01	; 1
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	0d 8c       	ldd	r0, Y+29	; 0x1d
    17ae:	02 c0       	rjmp	.+4      	; 0x17b4 <ShiftLeft250ms+0x142>
    17b0:	88 0f       	add	r24, r24
    17b2:	99 1f       	adc	r25, r25
    17b4:	0a 94       	dec	r0
    17b6:	e2 f7       	brpl	.-8      	; 0x17b0 <ShiftLeft250ms+0x13e>
    17b8:	82 23       	and	r24, r18
    17ba:	8c 93       	st	X, r24
    17bc:	80 e0       	ldi	r24, 0x00	; 0
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	aa e7       	ldi	r26, 0x7A	; 122
    17c2:	b3 e4       	ldi	r27, 0x43	; 67
    17c4:	8b 87       	std	Y+11, r24	; 0x0b
    17c6:	9c 87       	std	Y+12, r25	; 0x0c
    17c8:	ad 87       	std	Y+13, r26	; 0x0d
    17ca:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    17ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    17d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    17d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    17d4:	20 e0       	ldi	r18, 0x00	; 0
    17d6:	30 e0       	ldi	r19, 0x00	; 0
    17d8:	4a ef       	ldi	r20, 0xFA	; 250
    17da:	54 e4       	ldi	r21, 0x44	; 68
    17dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17e0:	dc 01       	movw	r26, r24
    17e2:	cb 01       	movw	r24, r22
    17e4:	8f 83       	std	Y+7, r24	; 0x07
    17e6:	98 87       	std	Y+8, r25	; 0x08
    17e8:	a9 87       	std	Y+9, r26	; 0x09
    17ea:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    17ec:	6f 81       	ldd	r22, Y+7	; 0x07
    17ee:	78 85       	ldd	r23, Y+8	; 0x08
    17f0:	89 85       	ldd	r24, Y+9	; 0x09
    17f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    17f4:	20 e0       	ldi	r18, 0x00	; 0
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	40 e8       	ldi	r20, 0x80	; 128
    17fa:	5f e3       	ldi	r21, 0x3F	; 63
    17fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1800:	88 23       	and	r24, r24
    1802:	2c f4       	brge	.+10     	; 0x180e <ShiftLeft250ms+0x19c>
		__ticks = 1;
    1804:	81 e0       	ldi	r24, 0x01	; 1
    1806:	90 e0       	ldi	r25, 0x00	; 0
    1808:	9e 83       	std	Y+6, r25	; 0x06
    180a:	8d 83       	std	Y+5, r24	; 0x05
    180c:	3f c0       	rjmp	.+126    	; 0x188c <ShiftLeft250ms+0x21a>
	else if (__tmp > 65535)
    180e:	6f 81       	ldd	r22, Y+7	; 0x07
    1810:	78 85       	ldd	r23, Y+8	; 0x08
    1812:	89 85       	ldd	r24, Y+9	; 0x09
    1814:	9a 85       	ldd	r25, Y+10	; 0x0a
    1816:	20 e0       	ldi	r18, 0x00	; 0
    1818:	3f ef       	ldi	r19, 0xFF	; 255
    181a:	4f e7       	ldi	r20, 0x7F	; 127
    181c:	57 e4       	ldi	r21, 0x47	; 71
    181e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1822:	18 16       	cp	r1, r24
    1824:	4c f5       	brge	.+82     	; 0x1878 <ShiftLeft250ms+0x206>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1826:	6b 85       	ldd	r22, Y+11	; 0x0b
    1828:	7c 85       	ldd	r23, Y+12	; 0x0c
    182a:	8d 85       	ldd	r24, Y+13	; 0x0d
    182c:	9e 85       	ldd	r25, Y+14	; 0x0e
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	40 e2       	ldi	r20, 0x20	; 32
    1834:	51 e4       	ldi	r21, 0x41	; 65
    1836:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    183a:	dc 01       	movw	r26, r24
    183c:	cb 01       	movw	r24, r22
    183e:	bc 01       	movw	r22, r24
    1840:	cd 01       	movw	r24, r26
    1842:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1846:	dc 01       	movw	r26, r24
    1848:	cb 01       	movw	r24, r22
    184a:	9e 83       	std	Y+6, r25	; 0x06
    184c:	8d 83       	std	Y+5, r24	; 0x05
    184e:	0f c0       	rjmp	.+30     	; 0x186e <ShiftLeft250ms+0x1fc>
    1850:	88 ec       	ldi	r24, 0xC8	; 200
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	9c 83       	std	Y+4, r25	; 0x04
    1856:	8b 83       	std	Y+3, r24	; 0x03
    1858:	8b 81       	ldd	r24, Y+3	; 0x03
    185a:	9c 81       	ldd	r25, Y+4	; 0x04
    185c:	01 97       	sbiw	r24, 0x01	; 1
    185e:	f1 f7       	brne	.-4      	; 0x185c <ShiftLeft250ms+0x1ea>
    1860:	9c 83       	std	Y+4, r25	; 0x04
    1862:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1864:	8d 81       	ldd	r24, Y+5	; 0x05
    1866:	9e 81       	ldd	r25, Y+6	; 0x06
    1868:	01 97       	sbiw	r24, 0x01	; 1
    186a:	9e 83       	std	Y+6, r25	; 0x06
    186c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    186e:	8d 81       	ldd	r24, Y+5	; 0x05
    1870:	9e 81       	ldd	r25, Y+6	; 0x06
    1872:	00 97       	sbiw	r24, 0x00	; 0
    1874:	69 f7       	brne	.-38     	; 0x1850 <ShiftLeft250ms+0x1de>
    1876:	14 c0       	rjmp	.+40     	; 0x18a0 <ShiftLeft250ms+0x22e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1878:	6f 81       	ldd	r22, Y+7	; 0x07
    187a:	78 85       	ldd	r23, Y+8	; 0x08
    187c:	89 85       	ldd	r24, Y+9	; 0x09
    187e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1880:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1884:	dc 01       	movw	r26, r24
    1886:	cb 01       	movw	r24, r22
    1888:	9e 83       	std	Y+6, r25	; 0x06
    188a:	8d 83       	std	Y+5, r24	; 0x05
    188c:	8d 81       	ldd	r24, Y+5	; 0x05
    188e:	9e 81       	ldd	r25, Y+6	; 0x06
    1890:	9a 83       	std	Y+2, r25	; 0x02
    1892:	89 83       	std	Y+1, r24	; 0x01
    1894:	89 81       	ldd	r24, Y+1	; 0x01
    1896:	9a 81       	ldd	r25, Y+2	; 0x02
    1898:	01 97       	sbiw	r24, 0x01	; 1
    189a:	f1 f7       	brne	.-4      	; 0x1898 <ShiftLeft250ms+0x226>
    189c:	9a 83       	std	Y+2, r25	; 0x02
    189e:	89 83       	std	Y+1, r24	; 0x01
}

void ShiftLeft250ms(void){
DDRA=0xff;
int i=0;
for(i=0;i<8;i++)
    18a0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    18a2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    18a4:	01 96       	adiw	r24, 0x01	; 1
    18a6:	9e 8f       	std	Y+30, r25	; 0x1e
    18a8:	8d 8f       	std	Y+29, r24	; 0x1d
    18aa:	8d 8d       	ldd	r24, Y+29	; 0x1d
    18ac:	9e 8d       	ldd	r25, Y+30	; 0x1e
    18ae:	88 30       	cpi	r24, 0x08	; 8
    18b0:	91 05       	cpc	r25, r1
    18b2:	0c f4       	brge	.+2      	; 0x18b6 <ShiftLeft250ms+0x244>
    18b4:	f1 ce       	rjmp	.-542    	; 0x1698 <ShiftLeft250ms+0x26>
	PORTA |=(1<<i);
	_delay_ms(250);
    PORTA &= (1<<i);
   _delay_ms(250);
}
}
    18b6:	6e 96       	adiw	r28, 0x1e	; 30
    18b8:	0f b6       	in	r0, 0x3f	; 63
    18ba:	f8 94       	cli
    18bc:	de bf       	out	0x3e, r29	; 62
    18be:	0f be       	out	0x3f, r0	; 63
    18c0:	cd bf       	out	0x3d, r28	; 61
    18c2:	cf 91       	pop	r28
    18c4:	df 91       	pop	r29
    18c6:	08 95       	ret

000018c8 <ShiftRight250ms>:

void ShiftRight250ms(void){
    18c8:	df 93       	push	r29
    18ca:	cf 93       	push	r28
    18cc:	cd b7       	in	r28, 0x3d	; 61
    18ce:	de b7       	in	r29, 0x3e	; 62
    18d0:	6e 97       	sbiw	r28, 0x1e	; 30
    18d2:	0f b6       	in	r0, 0x3f	; 63
    18d4:	f8 94       	cli
    18d6:	de bf       	out	0x3e, r29	; 62
    18d8:	0f be       	out	0x3f, r0	; 63
    18da:	cd bf       	out	0x3d, r28	; 61
DDRA=0xff;
    18dc:	ea e3       	ldi	r30, 0x3A	; 58
    18de:	f0 e0       	ldi	r31, 0x00	; 0
    18e0:	8f ef       	ldi	r24, 0xFF	; 255
    18e2:	80 83       	st	Z, r24
int i;
for(i=7;i>=0;--i)
    18e4:	87 e0       	ldi	r24, 0x07	; 7
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	9e 8f       	std	Y+30, r25	; 0x1e
    18ea:	8d 8f       	std	Y+29, r24	; 0x1d
    18ec:	09 c1       	rjmp	.+530    	; 0x1b00 <ShiftRight250ms+0x238>
{
	PORTA |=(1<<i);
    18ee:	ab e3       	ldi	r26, 0x3B	; 59
    18f0:	b0 e0       	ldi	r27, 0x00	; 0
    18f2:	eb e3       	ldi	r30, 0x3B	; 59
    18f4:	f0 e0       	ldi	r31, 0x00	; 0
    18f6:	80 81       	ld	r24, Z
    18f8:	28 2f       	mov	r18, r24
    18fa:	81 e0       	ldi	r24, 0x01	; 1
    18fc:	90 e0       	ldi	r25, 0x00	; 0
    18fe:	0d 8c       	ldd	r0, Y+29	; 0x1d
    1900:	02 c0       	rjmp	.+4      	; 0x1906 <ShiftRight250ms+0x3e>
    1902:	88 0f       	add	r24, r24
    1904:	99 1f       	adc	r25, r25
    1906:	0a 94       	dec	r0
    1908:	e2 f7       	brpl	.-8      	; 0x1902 <ShiftRight250ms+0x3a>
    190a:	82 2b       	or	r24, r18
    190c:	8c 93       	st	X, r24
    190e:	80 e0       	ldi	r24, 0x00	; 0
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	aa e7       	ldi	r26, 0x7A	; 122
    1914:	b3 e4       	ldi	r27, 0x43	; 67
    1916:	89 8f       	std	Y+25, r24	; 0x19
    1918:	9a 8f       	std	Y+26, r25	; 0x1a
    191a:	ab 8f       	std	Y+27, r26	; 0x1b
    191c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    191e:	69 8d       	ldd	r22, Y+25	; 0x19
    1920:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1922:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1924:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1926:	20 e0       	ldi	r18, 0x00	; 0
    1928:	30 e0       	ldi	r19, 0x00	; 0
    192a:	4a ef       	ldi	r20, 0xFA	; 250
    192c:	54 e4       	ldi	r21, 0x44	; 68
    192e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	8d 8b       	std	Y+21, r24	; 0x15
    1938:	9e 8b       	std	Y+22, r25	; 0x16
    193a:	af 8b       	std	Y+23, r26	; 0x17
    193c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    193e:	6d 89       	ldd	r22, Y+21	; 0x15
    1940:	7e 89       	ldd	r23, Y+22	; 0x16
    1942:	8f 89       	ldd	r24, Y+23	; 0x17
    1944:	98 8d       	ldd	r25, Y+24	; 0x18
    1946:	20 e0       	ldi	r18, 0x00	; 0
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	40 e8       	ldi	r20, 0x80	; 128
    194c:	5f e3       	ldi	r21, 0x3F	; 63
    194e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1952:	88 23       	and	r24, r24
    1954:	2c f4       	brge	.+10     	; 0x1960 <ShiftRight250ms+0x98>
		__ticks = 1;
    1956:	81 e0       	ldi	r24, 0x01	; 1
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	9c 8b       	std	Y+20, r25	; 0x14
    195c:	8b 8b       	std	Y+19, r24	; 0x13
    195e:	3f c0       	rjmp	.+126    	; 0x19de <ShiftRight250ms+0x116>
	else if (__tmp > 65535)
    1960:	6d 89       	ldd	r22, Y+21	; 0x15
    1962:	7e 89       	ldd	r23, Y+22	; 0x16
    1964:	8f 89       	ldd	r24, Y+23	; 0x17
    1966:	98 8d       	ldd	r25, Y+24	; 0x18
    1968:	20 e0       	ldi	r18, 0x00	; 0
    196a:	3f ef       	ldi	r19, 0xFF	; 255
    196c:	4f e7       	ldi	r20, 0x7F	; 127
    196e:	57 e4       	ldi	r21, 0x47	; 71
    1970:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1974:	18 16       	cp	r1, r24
    1976:	4c f5       	brge	.+82     	; 0x19ca <ShiftRight250ms+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1978:	69 8d       	ldd	r22, Y+25	; 0x19
    197a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    197c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    197e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1980:	20 e0       	ldi	r18, 0x00	; 0
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	40 e2       	ldi	r20, 0x20	; 32
    1986:	51 e4       	ldi	r21, 0x41	; 65
    1988:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    198c:	dc 01       	movw	r26, r24
    198e:	cb 01       	movw	r24, r22
    1990:	bc 01       	movw	r22, r24
    1992:	cd 01       	movw	r24, r26
    1994:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1998:	dc 01       	movw	r26, r24
    199a:	cb 01       	movw	r24, r22
    199c:	9c 8b       	std	Y+20, r25	; 0x14
    199e:	8b 8b       	std	Y+19, r24	; 0x13
    19a0:	0f c0       	rjmp	.+30     	; 0x19c0 <ShiftRight250ms+0xf8>
    19a2:	88 ec       	ldi	r24, 0xC8	; 200
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	9a 8b       	std	Y+18, r25	; 0x12
    19a8:	89 8b       	std	Y+17, r24	; 0x11
    19aa:	89 89       	ldd	r24, Y+17	; 0x11
    19ac:	9a 89       	ldd	r25, Y+18	; 0x12
    19ae:	01 97       	sbiw	r24, 0x01	; 1
    19b0:	f1 f7       	brne	.-4      	; 0x19ae <ShiftRight250ms+0xe6>
    19b2:	9a 8b       	std	Y+18, r25	; 0x12
    19b4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19b6:	8b 89       	ldd	r24, Y+19	; 0x13
    19b8:	9c 89       	ldd	r25, Y+20	; 0x14
    19ba:	01 97       	sbiw	r24, 0x01	; 1
    19bc:	9c 8b       	std	Y+20, r25	; 0x14
    19be:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c0:	8b 89       	ldd	r24, Y+19	; 0x13
    19c2:	9c 89       	ldd	r25, Y+20	; 0x14
    19c4:	00 97       	sbiw	r24, 0x00	; 0
    19c6:	69 f7       	brne	.-38     	; 0x19a2 <ShiftRight250ms+0xda>
    19c8:	14 c0       	rjmp	.+40     	; 0x19f2 <ShiftRight250ms+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19ca:	6d 89       	ldd	r22, Y+21	; 0x15
    19cc:	7e 89       	ldd	r23, Y+22	; 0x16
    19ce:	8f 89       	ldd	r24, Y+23	; 0x17
    19d0:	98 8d       	ldd	r25, Y+24	; 0x18
    19d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19d6:	dc 01       	movw	r26, r24
    19d8:	cb 01       	movw	r24, r22
    19da:	9c 8b       	std	Y+20, r25	; 0x14
    19dc:	8b 8b       	std	Y+19, r24	; 0x13
    19de:	8b 89       	ldd	r24, Y+19	; 0x13
    19e0:	9c 89       	ldd	r25, Y+20	; 0x14
    19e2:	98 8b       	std	Y+16, r25	; 0x10
    19e4:	8f 87       	std	Y+15, r24	; 0x0f
    19e6:	8f 85       	ldd	r24, Y+15	; 0x0f
    19e8:	98 89       	ldd	r25, Y+16	; 0x10
    19ea:	01 97       	sbiw	r24, 0x01	; 1
    19ec:	f1 f7       	brne	.-4      	; 0x19ea <ShiftRight250ms+0x122>
    19ee:	98 8b       	std	Y+16, r25	; 0x10
    19f0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(250);
    PORTA &= (1<<i);
    19f2:	ab e3       	ldi	r26, 0x3B	; 59
    19f4:	b0 e0       	ldi	r27, 0x00	; 0
    19f6:	eb e3       	ldi	r30, 0x3B	; 59
    19f8:	f0 e0       	ldi	r31, 0x00	; 0
    19fa:	80 81       	ld	r24, Z
    19fc:	28 2f       	mov	r18, r24
    19fe:	81 e0       	ldi	r24, 0x01	; 1
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	0d 8c       	ldd	r0, Y+29	; 0x1d
    1a04:	02 c0       	rjmp	.+4      	; 0x1a0a <ShiftRight250ms+0x142>
    1a06:	88 0f       	add	r24, r24
    1a08:	99 1f       	adc	r25, r25
    1a0a:	0a 94       	dec	r0
    1a0c:	e2 f7       	brpl	.-8      	; 0x1a06 <ShiftRight250ms+0x13e>
    1a0e:	82 23       	and	r24, r18
    1a10:	8c 93       	st	X, r24
    1a12:	80 e0       	ldi	r24, 0x00	; 0
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	aa e7       	ldi	r26, 0x7A	; 122
    1a18:	b3 e4       	ldi	r27, 0x43	; 67
    1a1a:	8b 87       	std	Y+11, r24	; 0x0b
    1a1c:	9c 87       	std	Y+12, r25	; 0x0c
    1a1e:	ad 87       	std	Y+13, r26	; 0x0d
    1a20:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a22:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a24:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a26:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a28:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a2a:	20 e0       	ldi	r18, 0x00	; 0
    1a2c:	30 e0       	ldi	r19, 0x00	; 0
    1a2e:	4a ef       	ldi	r20, 0xFA	; 250
    1a30:	54 e4       	ldi	r21, 0x44	; 68
    1a32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a36:	dc 01       	movw	r26, r24
    1a38:	cb 01       	movw	r24, r22
    1a3a:	8f 83       	std	Y+7, r24	; 0x07
    1a3c:	98 87       	std	Y+8, r25	; 0x08
    1a3e:	a9 87       	std	Y+9, r26	; 0x09
    1a40:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a42:	6f 81       	ldd	r22, Y+7	; 0x07
    1a44:	78 85       	ldd	r23, Y+8	; 0x08
    1a46:	89 85       	ldd	r24, Y+9	; 0x09
    1a48:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a4a:	20 e0       	ldi	r18, 0x00	; 0
    1a4c:	30 e0       	ldi	r19, 0x00	; 0
    1a4e:	40 e8       	ldi	r20, 0x80	; 128
    1a50:	5f e3       	ldi	r21, 0x3F	; 63
    1a52:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a56:	88 23       	and	r24, r24
    1a58:	2c f4       	brge	.+10     	; 0x1a64 <ShiftRight250ms+0x19c>
		__ticks = 1;
    1a5a:	81 e0       	ldi	r24, 0x01	; 1
    1a5c:	90 e0       	ldi	r25, 0x00	; 0
    1a5e:	9e 83       	std	Y+6, r25	; 0x06
    1a60:	8d 83       	std	Y+5, r24	; 0x05
    1a62:	3f c0       	rjmp	.+126    	; 0x1ae2 <ShiftRight250ms+0x21a>
	else if (__tmp > 65535)
    1a64:	6f 81       	ldd	r22, Y+7	; 0x07
    1a66:	78 85       	ldd	r23, Y+8	; 0x08
    1a68:	89 85       	ldd	r24, Y+9	; 0x09
    1a6a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a6c:	20 e0       	ldi	r18, 0x00	; 0
    1a6e:	3f ef       	ldi	r19, 0xFF	; 255
    1a70:	4f e7       	ldi	r20, 0x7F	; 127
    1a72:	57 e4       	ldi	r21, 0x47	; 71
    1a74:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a78:	18 16       	cp	r1, r24
    1a7a:	4c f5       	brge	.+82     	; 0x1ace <ShiftRight250ms+0x206>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a7c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a7e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a80:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a82:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a84:	20 e0       	ldi	r18, 0x00	; 0
    1a86:	30 e0       	ldi	r19, 0x00	; 0
    1a88:	40 e2       	ldi	r20, 0x20	; 32
    1a8a:	51 e4       	ldi	r21, 0x41	; 65
    1a8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a90:	dc 01       	movw	r26, r24
    1a92:	cb 01       	movw	r24, r22
    1a94:	bc 01       	movw	r22, r24
    1a96:	cd 01       	movw	r24, r26
    1a98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a9c:	dc 01       	movw	r26, r24
    1a9e:	cb 01       	movw	r24, r22
    1aa0:	9e 83       	std	Y+6, r25	; 0x06
    1aa2:	8d 83       	std	Y+5, r24	; 0x05
    1aa4:	0f c0       	rjmp	.+30     	; 0x1ac4 <ShiftRight250ms+0x1fc>
    1aa6:	88 ec       	ldi	r24, 0xC8	; 200
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	9c 83       	std	Y+4, r25	; 0x04
    1aac:	8b 83       	std	Y+3, r24	; 0x03
    1aae:	8b 81       	ldd	r24, Y+3	; 0x03
    1ab0:	9c 81       	ldd	r25, Y+4	; 0x04
    1ab2:	01 97       	sbiw	r24, 0x01	; 1
    1ab4:	f1 f7       	brne	.-4      	; 0x1ab2 <ShiftRight250ms+0x1ea>
    1ab6:	9c 83       	std	Y+4, r25	; 0x04
    1ab8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aba:	8d 81       	ldd	r24, Y+5	; 0x05
    1abc:	9e 81       	ldd	r25, Y+6	; 0x06
    1abe:	01 97       	sbiw	r24, 0x01	; 1
    1ac0:	9e 83       	std	Y+6, r25	; 0x06
    1ac2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ac4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ac6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ac8:	00 97       	sbiw	r24, 0x00	; 0
    1aca:	69 f7       	brne	.-38     	; 0x1aa6 <ShiftRight250ms+0x1de>
    1acc:	14 c0       	rjmp	.+40     	; 0x1af6 <ShiftRight250ms+0x22e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ace:	6f 81       	ldd	r22, Y+7	; 0x07
    1ad0:	78 85       	ldd	r23, Y+8	; 0x08
    1ad2:	89 85       	ldd	r24, Y+9	; 0x09
    1ad4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ad6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ada:	dc 01       	movw	r26, r24
    1adc:	cb 01       	movw	r24, r22
    1ade:	9e 83       	std	Y+6, r25	; 0x06
    1ae0:	8d 83       	std	Y+5, r24	; 0x05
    1ae2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ae4:	9e 81       	ldd	r25, Y+6	; 0x06
    1ae6:	9a 83       	std	Y+2, r25	; 0x02
    1ae8:	89 83       	std	Y+1, r24	; 0x01
    1aea:	89 81       	ldd	r24, Y+1	; 0x01
    1aec:	9a 81       	ldd	r25, Y+2	; 0x02
    1aee:	01 97       	sbiw	r24, 0x01	; 1
    1af0:	f1 f7       	brne	.-4      	; 0x1aee <ShiftRight250ms+0x226>
    1af2:	9a 83       	std	Y+2, r25	; 0x02
    1af4:	89 83       	std	Y+1, r24	; 0x01
}

void ShiftRight250ms(void){
DDRA=0xff;
int i;
for(i=7;i>=0;--i)
    1af6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1af8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1afa:	01 97       	sbiw	r24, 0x01	; 1
    1afc:	9e 8f       	std	Y+30, r25	; 0x1e
    1afe:	8d 8f       	std	Y+29, r24	; 0x1d
    1b00:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1b02:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1b04:	99 23       	and	r25, r25
    1b06:	0c f0       	brlt	.+2      	; 0x1b0a <ShiftRight250ms+0x242>
    1b08:	f2 ce       	rjmp	.-540    	; 0x18ee <ShiftRight250ms+0x26>
	PORTA |=(1<<i);
	_delay_ms(250);
    PORTA &= (1<<i);
   _delay_ms(250);
}
}
    1b0a:	6e 96       	adiw	r28, 0x1e	; 30
    1b0c:	0f b6       	in	r0, 0x3f	; 63
    1b0e:	f8 94       	cli
    1b10:	de bf       	out	0x3e, r29	; 62
    1b12:	0f be       	out	0x3f, r0	; 63
    1b14:	cd bf       	out	0x3d, r28	; 61
    1b16:	cf 91       	pop	r28
    1b18:	df 91       	pop	r29
    1b1a:	08 95       	ret

00001b1c <LedConverging300ms>:
void LedConverging300ms(){
    1b1c:	df 93       	push	r29
    1b1e:	cf 93       	push	r28
    1b20:	cd b7       	in	r28, 0x3d	; 61
    1b22:	de b7       	in	r29, 0x3e	; 62
    1b24:	a0 97       	sbiw	r28, 0x20	; 32
    1b26:	0f b6       	in	r0, 0x3f	; 63
    1b28:	f8 94       	cli
    1b2a:	de bf       	out	0x3e, r29	; 62
    1b2c:	0f be       	out	0x3f, r0	; 63
    1b2e:	cd bf       	out	0x3d, r28	; 61

	DDRA=0xff;
    1b30:	ea e3       	ldi	r30, 0x3A	; 58
    1b32:	f0 e0       	ldi	r31, 0x00	; 0
    1b34:	8f ef       	ldi	r24, 0xFF	; 255
    1b36:	80 83       	st	Z, r24
	int i,j;
	for(i=7,j=0 ;j<4 && i>=4;--i,++j)
    1b38:	87 e0       	ldi	r24, 0x07	; 7
    1b3a:	90 e0       	ldi	r25, 0x00	; 0
    1b3c:	98 a3       	std	Y+32, r25	; 0x20
    1b3e:	8f 8f       	std	Y+31, r24	; 0x1f
    1b40:	1e 8e       	std	Y+30, r1	; 0x1e
    1b42:	1d 8e       	std	Y+29, r1	; 0x1d
    1b44:	2e c1       	rjmp	.+604    	; 0x1da2 <LedConverging300ms+0x286>
	{


		   PORTA |=(1<<i);
    1b46:	ab e3       	ldi	r26, 0x3B	; 59
    1b48:	b0 e0       	ldi	r27, 0x00	; 0
    1b4a:	eb e3       	ldi	r30, 0x3B	; 59
    1b4c:	f0 e0       	ldi	r31, 0x00	; 0
    1b4e:	80 81       	ld	r24, Z
    1b50:	28 2f       	mov	r18, r24
    1b52:	81 e0       	ldi	r24, 0x01	; 1
    1b54:	90 e0       	ldi	r25, 0x00	; 0
    1b56:	0f 8c       	ldd	r0, Y+31	; 0x1f
    1b58:	02 c0       	rjmp	.+4      	; 0x1b5e <LedConverging300ms+0x42>
    1b5a:	88 0f       	add	r24, r24
    1b5c:	99 1f       	adc	r25, r25
    1b5e:	0a 94       	dec	r0
    1b60:	e2 f7       	brpl	.-8      	; 0x1b5a <LedConverging300ms+0x3e>
    1b62:	82 2b       	or	r24, r18
    1b64:	8c 93       	st	X, r24
		   PORTA |=(1<<j);
    1b66:	ab e3       	ldi	r26, 0x3B	; 59
    1b68:	b0 e0       	ldi	r27, 0x00	; 0
    1b6a:	eb e3       	ldi	r30, 0x3B	; 59
    1b6c:	f0 e0       	ldi	r31, 0x00	; 0
    1b6e:	80 81       	ld	r24, Z
    1b70:	28 2f       	mov	r18, r24
    1b72:	81 e0       	ldi	r24, 0x01	; 1
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	0d 8c       	ldd	r0, Y+29	; 0x1d
    1b78:	02 c0       	rjmp	.+4      	; 0x1b7e <LedConverging300ms+0x62>
    1b7a:	88 0f       	add	r24, r24
    1b7c:	99 1f       	adc	r25, r25
    1b7e:	0a 94       	dec	r0
    1b80:	e2 f7       	brpl	.-8      	; 0x1b7a <LedConverging300ms+0x5e>
    1b82:	82 2b       	or	r24, r18
    1b84:	8c 93       	st	X, r24
    1b86:	80 e0       	ldi	r24, 0x00	; 0
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	a6 e9       	ldi	r26, 0x96	; 150
    1b8c:	b3 e4       	ldi	r27, 0x43	; 67
    1b8e:	89 8f       	std	Y+25, r24	; 0x19
    1b90:	9a 8f       	std	Y+26, r25	; 0x1a
    1b92:	ab 8f       	std	Y+27, r26	; 0x1b
    1b94:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b96:	69 8d       	ldd	r22, Y+25	; 0x19
    1b98:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b9a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b9c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b9e:	20 e0       	ldi	r18, 0x00	; 0
    1ba0:	30 e0       	ldi	r19, 0x00	; 0
    1ba2:	4a ef       	ldi	r20, 0xFA	; 250
    1ba4:	54 e4       	ldi	r21, 0x44	; 68
    1ba6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1baa:	dc 01       	movw	r26, r24
    1bac:	cb 01       	movw	r24, r22
    1bae:	8d 8b       	std	Y+21, r24	; 0x15
    1bb0:	9e 8b       	std	Y+22, r25	; 0x16
    1bb2:	af 8b       	std	Y+23, r26	; 0x17
    1bb4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1bb6:	6d 89       	ldd	r22, Y+21	; 0x15
    1bb8:	7e 89       	ldd	r23, Y+22	; 0x16
    1bba:	8f 89       	ldd	r24, Y+23	; 0x17
    1bbc:	98 8d       	ldd	r25, Y+24	; 0x18
    1bbe:	20 e0       	ldi	r18, 0x00	; 0
    1bc0:	30 e0       	ldi	r19, 0x00	; 0
    1bc2:	40 e8       	ldi	r20, 0x80	; 128
    1bc4:	5f e3       	ldi	r21, 0x3F	; 63
    1bc6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1bca:	88 23       	and	r24, r24
    1bcc:	2c f4       	brge	.+10     	; 0x1bd8 <LedConverging300ms+0xbc>
		__ticks = 1;
    1bce:	81 e0       	ldi	r24, 0x01	; 1
    1bd0:	90 e0       	ldi	r25, 0x00	; 0
    1bd2:	9c 8b       	std	Y+20, r25	; 0x14
    1bd4:	8b 8b       	std	Y+19, r24	; 0x13
    1bd6:	3f c0       	rjmp	.+126    	; 0x1c56 <LedConverging300ms+0x13a>
	else if (__tmp > 65535)
    1bd8:	6d 89       	ldd	r22, Y+21	; 0x15
    1bda:	7e 89       	ldd	r23, Y+22	; 0x16
    1bdc:	8f 89       	ldd	r24, Y+23	; 0x17
    1bde:	98 8d       	ldd	r25, Y+24	; 0x18
    1be0:	20 e0       	ldi	r18, 0x00	; 0
    1be2:	3f ef       	ldi	r19, 0xFF	; 255
    1be4:	4f e7       	ldi	r20, 0x7F	; 127
    1be6:	57 e4       	ldi	r21, 0x47	; 71
    1be8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1bec:	18 16       	cp	r1, r24
    1bee:	4c f5       	brge	.+82     	; 0x1c42 <LedConverging300ms+0x126>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bf0:	69 8d       	ldd	r22, Y+25	; 0x19
    1bf2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1bf4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1bf6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1bf8:	20 e0       	ldi	r18, 0x00	; 0
    1bfa:	30 e0       	ldi	r19, 0x00	; 0
    1bfc:	40 e2       	ldi	r20, 0x20	; 32
    1bfe:	51 e4       	ldi	r21, 0x41	; 65
    1c00:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c04:	dc 01       	movw	r26, r24
    1c06:	cb 01       	movw	r24, r22
    1c08:	bc 01       	movw	r22, r24
    1c0a:	cd 01       	movw	r24, r26
    1c0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c10:	dc 01       	movw	r26, r24
    1c12:	cb 01       	movw	r24, r22
    1c14:	9c 8b       	std	Y+20, r25	; 0x14
    1c16:	8b 8b       	std	Y+19, r24	; 0x13
    1c18:	0f c0       	rjmp	.+30     	; 0x1c38 <LedConverging300ms+0x11c>
    1c1a:	88 ec       	ldi	r24, 0xC8	; 200
    1c1c:	90 e0       	ldi	r25, 0x00	; 0
    1c1e:	9a 8b       	std	Y+18, r25	; 0x12
    1c20:	89 8b       	std	Y+17, r24	; 0x11
    1c22:	89 89       	ldd	r24, Y+17	; 0x11
    1c24:	9a 89       	ldd	r25, Y+18	; 0x12
    1c26:	01 97       	sbiw	r24, 0x01	; 1
    1c28:	f1 f7       	brne	.-4      	; 0x1c26 <LedConverging300ms+0x10a>
    1c2a:	9a 8b       	std	Y+18, r25	; 0x12
    1c2c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c2e:	8b 89       	ldd	r24, Y+19	; 0x13
    1c30:	9c 89       	ldd	r25, Y+20	; 0x14
    1c32:	01 97       	sbiw	r24, 0x01	; 1
    1c34:	9c 8b       	std	Y+20, r25	; 0x14
    1c36:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c38:	8b 89       	ldd	r24, Y+19	; 0x13
    1c3a:	9c 89       	ldd	r25, Y+20	; 0x14
    1c3c:	00 97       	sbiw	r24, 0x00	; 0
    1c3e:	69 f7       	brne	.-38     	; 0x1c1a <LedConverging300ms+0xfe>
    1c40:	14 c0       	rjmp	.+40     	; 0x1c6a <LedConverging300ms+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c42:	6d 89       	ldd	r22, Y+21	; 0x15
    1c44:	7e 89       	ldd	r23, Y+22	; 0x16
    1c46:	8f 89       	ldd	r24, Y+23	; 0x17
    1c48:	98 8d       	ldd	r25, Y+24	; 0x18
    1c4a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c4e:	dc 01       	movw	r26, r24
    1c50:	cb 01       	movw	r24, r22
    1c52:	9c 8b       	std	Y+20, r25	; 0x14
    1c54:	8b 8b       	std	Y+19, r24	; 0x13
    1c56:	8b 89       	ldd	r24, Y+19	; 0x13
    1c58:	9c 89       	ldd	r25, Y+20	; 0x14
    1c5a:	98 8b       	std	Y+16, r25	; 0x10
    1c5c:	8f 87       	std	Y+15, r24	; 0x0f
    1c5e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c60:	98 89       	ldd	r25, Y+16	; 0x10
    1c62:	01 97       	sbiw	r24, 0x01	; 1
    1c64:	f1 f7       	brne	.-4      	; 0x1c62 <LedConverging300ms+0x146>
    1c66:	98 8b       	std	Y+16, r25	; 0x10
    1c68:	8f 87       	std	Y+15, r24	; 0x0f
	   	   _delay_ms(300);
	   	  PORTA &= (1<<i);
    1c6a:	ab e3       	ldi	r26, 0x3B	; 59
    1c6c:	b0 e0       	ldi	r27, 0x00	; 0
    1c6e:	eb e3       	ldi	r30, 0x3B	; 59
    1c70:	f0 e0       	ldi	r31, 0x00	; 0
    1c72:	80 81       	ld	r24, Z
    1c74:	28 2f       	mov	r18, r24
    1c76:	81 e0       	ldi	r24, 0x01	; 1
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	0f 8c       	ldd	r0, Y+31	; 0x1f
    1c7c:	02 c0       	rjmp	.+4      	; 0x1c82 <LedConverging300ms+0x166>
    1c7e:	88 0f       	add	r24, r24
    1c80:	99 1f       	adc	r25, r25
    1c82:	0a 94       	dec	r0
    1c84:	e2 f7       	brpl	.-8      	; 0x1c7e <LedConverging300ms+0x162>
    1c86:	82 23       	and	r24, r18
    1c88:	8c 93       	st	X, r24
	   	   PORTA &= (1<<j);
    1c8a:	ab e3       	ldi	r26, 0x3B	; 59
    1c8c:	b0 e0       	ldi	r27, 0x00	; 0
    1c8e:	eb e3       	ldi	r30, 0x3B	; 59
    1c90:	f0 e0       	ldi	r31, 0x00	; 0
    1c92:	80 81       	ld	r24, Z
    1c94:	28 2f       	mov	r18, r24
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	90 e0       	ldi	r25, 0x00	; 0
    1c9a:	0d 8c       	ldd	r0, Y+29	; 0x1d
    1c9c:	02 c0       	rjmp	.+4      	; 0x1ca2 <LedConverging300ms+0x186>
    1c9e:	88 0f       	add	r24, r24
    1ca0:	99 1f       	adc	r25, r25
    1ca2:	0a 94       	dec	r0
    1ca4:	e2 f7       	brpl	.-8      	; 0x1c9e <LedConverging300ms+0x182>
    1ca6:	82 23       	and	r24, r18
    1ca8:	8c 93       	st	X, r24
    1caa:	80 e0       	ldi	r24, 0x00	; 0
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	a6 e9       	ldi	r26, 0x96	; 150
    1cb0:	b3 e4       	ldi	r27, 0x43	; 67
    1cb2:	8b 87       	std	Y+11, r24	; 0x0b
    1cb4:	9c 87       	std	Y+12, r25	; 0x0c
    1cb6:	ad 87       	std	Y+13, r26	; 0x0d
    1cb8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cba:	6b 85       	ldd	r22, Y+11	; 0x0b
    1cbc:	7c 85       	ldd	r23, Y+12	; 0x0c
    1cbe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1cc0:	9e 85       	ldd	r25, Y+14	; 0x0e
    1cc2:	20 e0       	ldi	r18, 0x00	; 0
    1cc4:	30 e0       	ldi	r19, 0x00	; 0
    1cc6:	4a ef       	ldi	r20, 0xFA	; 250
    1cc8:	54 e4       	ldi	r21, 0x44	; 68
    1cca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cce:	dc 01       	movw	r26, r24
    1cd0:	cb 01       	movw	r24, r22
    1cd2:	8f 83       	std	Y+7, r24	; 0x07
    1cd4:	98 87       	std	Y+8, r25	; 0x08
    1cd6:	a9 87       	std	Y+9, r26	; 0x09
    1cd8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1cda:	6f 81       	ldd	r22, Y+7	; 0x07
    1cdc:	78 85       	ldd	r23, Y+8	; 0x08
    1cde:	89 85       	ldd	r24, Y+9	; 0x09
    1ce0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ce2:	20 e0       	ldi	r18, 0x00	; 0
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	40 e8       	ldi	r20, 0x80	; 128
    1ce8:	5f e3       	ldi	r21, 0x3F	; 63
    1cea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1cee:	88 23       	and	r24, r24
    1cf0:	2c f4       	brge	.+10     	; 0x1cfc <LedConverging300ms+0x1e0>
		__ticks = 1;
    1cf2:	81 e0       	ldi	r24, 0x01	; 1
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	9e 83       	std	Y+6, r25	; 0x06
    1cf8:	8d 83       	std	Y+5, r24	; 0x05
    1cfa:	3f c0       	rjmp	.+126    	; 0x1d7a <LedConverging300ms+0x25e>
	else if (__tmp > 65535)
    1cfc:	6f 81       	ldd	r22, Y+7	; 0x07
    1cfe:	78 85       	ldd	r23, Y+8	; 0x08
    1d00:	89 85       	ldd	r24, Y+9	; 0x09
    1d02:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d04:	20 e0       	ldi	r18, 0x00	; 0
    1d06:	3f ef       	ldi	r19, 0xFF	; 255
    1d08:	4f e7       	ldi	r20, 0x7F	; 127
    1d0a:	57 e4       	ldi	r21, 0x47	; 71
    1d0c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d10:	18 16       	cp	r1, r24
    1d12:	4c f5       	brge	.+82     	; 0x1d66 <LedConverging300ms+0x24a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d14:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d16:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d18:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d1a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d1c:	20 e0       	ldi	r18, 0x00	; 0
    1d1e:	30 e0       	ldi	r19, 0x00	; 0
    1d20:	40 e2       	ldi	r20, 0x20	; 32
    1d22:	51 e4       	ldi	r21, 0x41	; 65
    1d24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d28:	dc 01       	movw	r26, r24
    1d2a:	cb 01       	movw	r24, r22
    1d2c:	bc 01       	movw	r22, r24
    1d2e:	cd 01       	movw	r24, r26
    1d30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d34:	dc 01       	movw	r26, r24
    1d36:	cb 01       	movw	r24, r22
    1d38:	9e 83       	std	Y+6, r25	; 0x06
    1d3a:	8d 83       	std	Y+5, r24	; 0x05
    1d3c:	0f c0       	rjmp	.+30     	; 0x1d5c <LedConverging300ms+0x240>
    1d3e:	88 ec       	ldi	r24, 0xC8	; 200
    1d40:	90 e0       	ldi	r25, 0x00	; 0
    1d42:	9c 83       	std	Y+4, r25	; 0x04
    1d44:	8b 83       	std	Y+3, r24	; 0x03
    1d46:	8b 81       	ldd	r24, Y+3	; 0x03
    1d48:	9c 81       	ldd	r25, Y+4	; 0x04
    1d4a:	01 97       	sbiw	r24, 0x01	; 1
    1d4c:	f1 f7       	brne	.-4      	; 0x1d4a <LedConverging300ms+0x22e>
    1d4e:	9c 83       	std	Y+4, r25	; 0x04
    1d50:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d52:	8d 81       	ldd	r24, Y+5	; 0x05
    1d54:	9e 81       	ldd	r25, Y+6	; 0x06
    1d56:	01 97       	sbiw	r24, 0x01	; 1
    1d58:	9e 83       	std	Y+6, r25	; 0x06
    1d5a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d5c:	8d 81       	ldd	r24, Y+5	; 0x05
    1d5e:	9e 81       	ldd	r25, Y+6	; 0x06
    1d60:	00 97       	sbiw	r24, 0x00	; 0
    1d62:	69 f7       	brne	.-38     	; 0x1d3e <LedConverging300ms+0x222>
    1d64:	14 c0       	rjmp	.+40     	; 0x1d8e <LedConverging300ms+0x272>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d66:	6f 81       	ldd	r22, Y+7	; 0x07
    1d68:	78 85       	ldd	r23, Y+8	; 0x08
    1d6a:	89 85       	ldd	r24, Y+9	; 0x09
    1d6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d6e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d72:	dc 01       	movw	r26, r24
    1d74:	cb 01       	movw	r24, r22
    1d76:	9e 83       	std	Y+6, r25	; 0x06
    1d78:	8d 83       	std	Y+5, r24	; 0x05
    1d7a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d7c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d7e:	9a 83       	std	Y+2, r25	; 0x02
    1d80:	89 83       	std	Y+1, r24	; 0x01
    1d82:	89 81       	ldd	r24, Y+1	; 0x01
    1d84:	9a 81       	ldd	r25, Y+2	; 0x02
    1d86:	01 97       	sbiw	r24, 0x01	; 1
    1d88:	f1 f7       	brne	.-4      	; 0x1d86 <LedConverging300ms+0x26a>
    1d8a:	9a 83       	std	Y+2, r25	; 0x02
    1d8c:	89 83       	std	Y+1, r24	; 0x01
}
void LedConverging300ms(){

	DDRA=0xff;
	int i,j;
	for(i=7,j=0 ;j<4 && i>=4;--i,++j)
    1d8e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d90:	98 a1       	ldd	r25, Y+32	; 0x20
    1d92:	01 97       	sbiw	r24, 0x01	; 1
    1d94:	98 a3       	std	Y+32, r25	; 0x20
    1d96:	8f 8f       	std	Y+31, r24	; 0x1f
    1d98:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d9a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d9c:	01 96       	adiw	r24, 0x01	; 1
    1d9e:	9e 8f       	std	Y+30, r25	; 0x1e
    1da0:	8d 8f       	std	Y+29, r24	; 0x1d
    1da2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1da4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1da6:	84 30       	cpi	r24, 0x04	; 4
    1da8:	91 05       	cpc	r25, r1
    1daa:	34 f4       	brge	.+12     	; 0x1db8 <LedConverging300ms+0x29c>
    1dac:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1dae:	98 a1       	ldd	r25, Y+32	; 0x20
    1db0:	84 30       	cpi	r24, 0x04	; 4
    1db2:	91 05       	cpc	r25, r1
    1db4:	0c f0       	brlt	.+2      	; 0x1db8 <LedConverging300ms+0x29c>
    1db6:	c7 ce       	rjmp	.-626    	; 0x1b46 <LedConverging300ms+0x2a>

	}



}
    1db8:	a0 96       	adiw	r28, 0x20	; 32
    1dba:	0f b6       	in	r0, 0x3f	; 63
    1dbc:	f8 94       	cli
    1dbe:	de bf       	out	0x3e, r29	; 62
    1dc0:	0f be       	out	0x3f, r0	; 63
    1dc2:	cd bf       	out	0x3d, r28	; 61
    1dc4:	cf 91       	pop	r28
    1dc6:	df 91       	pop	r29
    1dc8:	08 95       	ret

00001dca <LedDiverging300ms>:

void LedDiverging300ms(){
    1dca:	df 93       	push	r29
    1dcc:	cf 93       	push	r28
    1dce:	cd b7       	in	r28, 0x3d	; 61
    1dd0:	de b7       	in	r29, 0x3e	; 62
    1dd2:	a0 97       	sbiw	r28, 0x20	; 32
    1dd4:	0f b6       	in	r0, 0x3f	; 63
    1dd6:	f8 94       	cli
    1dd8:	de bf       	out	0x3e, r29	; 62
    1dda:	0f be       	out	0x3f, r0	; 63
    1ddc:	cd bf       	out	0x3d, r28	; 61
	DDRA=0xff;
    1dde:	ea e3       	ldi	r30, 0x3A	; 58
    1de0:	f0 e0       	ldi	r31, 0x00	; 0
    1de2:	8f ef       	ldi	r24, 0xFF	; 255
    1de4:	80 83       	st	Z, r24
	int i,j;
	for(i=4,j=3 ;i<8 && j>=0;++i,--j)
    1de6:	84 e0       	ldi	r24, 0x04	; 4
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	98 a3       	std	Y+32, r25	; 0x20
    1dec:	8f 8f       	std	Y+31, r24	; 0x1f
    1dee:	83 e0       	ldi	r24, 0x03	; 3
    1df0:	90 e0       	ldi	r25, 0x00	; 0
    1df2:	9e 8f       	std	Y+30, r25	; 0x1e
    1df4:	8d 8f       	std	Y+29, r24	; 0x1d
    1df6:	2e c1       	rjmp	.+604    	; 0x2054 <LedDiverging300ms+0x28a>
	{


		   PORTA |=(1<<i);
    1df8:	ab e3       	ldi	r26, 0x3B	; 59
    1dfa:	b0 e0       	ldi	r27, 0x00	; 0
    1dfc:	eb e3       	ldi	r30, 0x3B	; 59
    1dfe:	f0 e0       	ldi	r31, 0x00	; 0
    1e00:	80 81       	ld	r24, Z
    1e02:	28 2f       	mov	r18, r24
    1e04:	81 e0       	ldi	r24, 0x01	; 1
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	0f 8c       	ldd	r0, Y+31	; 0x1f
    1e0a:	02 c0       	rjmp	.+4      	; 0x1e10 <LedDiverging300ms+0x46>
    1e0c:	88 0f       	add	r24, r24
    1e0e:	99 1f       	adc	r25, r25
    1e10:	0a 94       	dec	r0
    1e12:	e2 f7       	brpl	.-8      	; 0x1e0c <LedDiverging300ms+0x42>
    1e14:	82 2b       	or	r24, r18
    1e16:	8c 93       	st	X, r24
		   PORTA |=(1<<j);
    1e18:	ab e3       	ldi	r26, 0x3B	; 59
    1e1a:	b0 e0       	ldi	r27, 0x00	; 0
    1e1c:	eb e3       	ldi	r30, 0x3B	; 59
    1e1e:	f0 e0       	ldi	r31, 0x00	; 0
    1e20:	80 81       	ld	r24, Z
    1e22:	28 2f       	mov	r18, r24
    1e24:	81 e0       	ldi	r24, 0x01	; 1
    1e26:	90 e0       	ldi	r25, 0x00	; 0
    1e28:	0d 8c       	ldd	r0, Y+29	; 0x1d
    1e2a:	02 c0       	rjmp	.+4      	; 0x1e30 <LedDiverging300ms+0x66>
    1e2c:	88 0f       	add	r24, r24
    1e2e:	99 1f       	adc	r25, r25
    1e30:	0a 94       	dec	r0
    1e32:	e2 f7       	brpl	.-8      	; 0x1e2c <LedDiverging300ms+0x62>
    1e34:	82 2b       	or	r24, r18
    1e36:	8c 93       	st	X, r24
    1e38:	80 e0       	ldi	r24, 0x00	; 0
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	a6 e9       	ldi	r26, 0x96	; 150
    1e3e:	b3 e4       	ldi	r27, 0x43	; 67
    1e40:	89 8f       	std	Y+25, r24	; 0x19
    1e42:	9a 8f       	std	Y+26, r25	; 0x1a
    1e44:	ab 8f       	std	Y+27, r26	; 0x1b
    1e46:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e48:	69 8d       	ldd	r22, Y+25	; 0x19
    1e4a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e4c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e4e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e50:	20 e0       	ldi	r18, 0x00	; 0
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	4a ef       	ldi	r20, 0xFA	; 250
    1e56:	54 e4       	ldi	r21, 0x44	; 68
    1e58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e5c:	dc 01       	movw	r26, r24
    1e5e:	cb 01       	movw	r24, r22
    1e60:	8d 8b       	std	Y+21, r24	; 0x15
    1e62:	9e 8b       	std	Y+22, r25	; 0x16
    1e64:	af 8b       	std	Y+23, r26	; 0x17
    1e66:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e68:	6d 89       	ldd	r22, Y+21	; 0x15
    1e6a:	7e 89       	ldd	r23, Y+22	; 0x16
    1e6c:	8f 89       	ldd	r24, Y+23	; 0x17
    1e6e:	98 8d       	ldd	r25, Y+24	; 0x18
    1e70:	20 e0       	ldi	r18, 0x00	; 0
    1e72:	30 e0       	ldi	r19, 0x00	; 0
    1e74:	40 e8       	ldi	r20, 0x80	; 128
    1e76:	5f e3       	ldi	r21, 0x3F	; 63
    1e78:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e7c:	88 23       	and	r24, r24
    1e7e:	2c f4       	brge	.+10     	; 0x1e8a <LedDiverging300ms+0xc0>
		__ticks = 1;
    1e80:	81 e0       	ldi	r24, 0x01	; 1
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	9c 8b       	std	Y+20, r25	; 0x14
    1e86:	8b 8b       	std	Y+19, r24	; 0x13
    1e88:	3f c0       	rjmp	.+126    	; 0x1f08 <LedDiverging300ms+0x13e>
	else if (__tmp > 65535)
    1e8a:	6d 89       	ldd	r22, Y+21	; 0x15
    1e8c:	7e 89       	ldd	r23, Y+22	; 0x16
    1e8e:	8f 89       	ldd	r24, Y+23	; 0x17
    1e90:	98 8d       	ldd	r25, Y+24	; 0x18
    1e92:	20 e0       	ldi	r18, 0x00	; 0
    1e94:	3f ef       	ldi	r19, 0xFF	; 255
    1e96:	4f e7       	ldi	r20, 0x7F	; 127
    1e98:	57 e4       	ldi	r21, 0x47	; 71
    1e9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e9e:	18 16       	cp	r1, r24
    1ea0:	4c f5       	brge	.+82     	; 0x1ef4 <LedDiverging300ms+0x12a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ea2:	69 8d       	ldd	r22, Y+25	; 0x19
    1ea4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ea6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ea8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1eaa:	20 e0       	ldi	r18, 0x00	; 0
    1eac:	30 e0       	ldi	r19, 0x00	; 0
    1eae:	40 e2       	ldi	r20, 0x20	; 32
    1eb0:	51 e4       	ldi	r21, 0x41	; 65
    1eb2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1eb6:	dc 01       	movw	r26, r24
    1eb8:	cb 01       	movw	r24, r22
    1eba:	bc 01       	movw	r22, r24
    1ebc:	cd 01       	movw	r24, r26
    1ebe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ec2:	dc 01       	movw	r26, r24
    1ec4:	cb 01       	movw	r24, r22
    1ec6:	9c 8b       	std	Y+20, r25	; 0x14
    1ec8:	8b 8b       	std	Y+19, r24	; 0x13
    1eca:	0f c0       	rjmp	.+30     	; 0x1eea <LedDiverging300ms+0x120>
    1ecc:	88 ec       	ldi	r24, 0xC8	; 200
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	9a 8b       	std	Y+18, r25	; 0x12
    1ed2:	89 8b       	std	Y+17, r24	; 0x11
    1ed4:	89 89       	ldd	r24, Y+17	; 0x11
    1ed6:	9a 89       	ldd	r25, Y+18	; 0x12
    1ed8:	01 97       	sbiw	r24, 0x01	; 1
    1eda:	f1 f7       	brne	.-4      	; 0x1ed8 <LedDiverging300ms+0x10e>
    1edc:	9a 8b       	std	Y+18, r25	; 0x12
    1ede:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ee0:	8b 89       	ldd	r24, Y+19	; 0x13
    1ee2:	9c 89       	ldd	r25, Y+20	; 0x14
    1ee4:	01 97       	sbiw	r24, 0x01	; 1
    1ee6:	9c 8b       	std	Y+20, r25	; 0x14
    1ee8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1eea:	8b 89       	ldd	r24, Y+19	; 0x13
    1eec:	9c 89       	ldd	r25, Y+20	; 0x14
    1eee:	00 97       	sbiw	r24, 0x00	; 0
    1ef0:	69 f7       	brne	.-38     	; 0x1ecc <LedDiverging300ms+0x102>
    1ef2:	14 c0       	rjmp	.+40     	; 0x1f1c <LedDiverging300ms+0x152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ef4:	6d 89       	ldd	r22, Y+21	; 0x15
    1ef6:	7e 89       	ldd	r23, Y+22	; 0x16
    1ef8:	8f 89       	ldd	r24, Y+23	; 0x17
    1efa:	98 8d       	ldd	r25, Y+24	; 0x18
    1efc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f00:	dc 01       	movw	r26, r24
    1f02:	cb 01       	movw	r24, r22
    1f04:	9c 8b       	std	Y+20, r25	; 0x14
    1f06:	8b 8b       	std	Y+19, r24	; 0x13
    1f08:	8b 89       	ldd	r24, Y+19	; 0x13
    1f0a:	9c 89       	ldd	r25, Y+20	; 0x14
    1f0c:	98 8b       	std	Y+16, r25	; 0x10
    1f0e:	8f 87       	std	Y+15, r24	; 0x0f
    1f10:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f12:	98 89       	ldd	r25, Y+16	; 0x10
    1f14:	01 97       	sbiw	r24, 0x01	; 1
    1f16:	f1 f7       	brne	.-4      	; 0x1f14 <LedDiverging300ms+0x14a>
    1f18:	98 8b       	std	Y+16, r25	; 0x10
    1f1a:	8f 87       	std	Y+15, r24	; 0x0f
	   	   _delay_ms(300);
	   	  PORTA &= (1<<i);
    1f1c:	ab e3       	ldi	r26, 0x3B	; 59
    1f1e:	b0 e0       	ldi	r27, 0x00	; 0
    1f20:	eb e3       	ldi	r30, 0x3B	; 59
    1f22:	f0 e0       	ldi	r31, 0x00	; 0
    1f24:	80 81       	ld	r24, Z
    1f26:	28 2f       	mov	r18, r24
    1f28:	81 e0       	ldi	r24, 0x01	; 1
    1f2a:	90 e0       	ldi	r25, 0x00	; 0
    1f2c:	0f 8c       	ldd	r0, Y+31	; 0x1f
    1f2e:	02 c0       	rjmp	.+4      	; 0x1f34 <LedDiverging300ms+0x16a>
    1f30:	88 0f       	add	r24, r24
    1f32:	99 1f       	adc	r25, r25
    1f34:	0a 94       	dec	r0
    1f36:	e2 f7       	brpl	.-8      	; 0x1f30 <LedDiverging300ms+0x166>
    1f38:	82 23       	and	r24, r18
    1f3a:	8c 93       	st	X, r24
	   	   PORTA &= (1<<j);
    1f3c:	ab e3       	ldi	r26, 0x3B	; 59
    1f3e:	b0 e0       	ldi	r27, 0x00	; 0
    1f40:	eb e3       	ldi	r30, 0x3B	; 59
    1f42:	f0 e0       	ldi	r31, 0x00	; 0
    1f44:	80 81       	ld	r24, Z
    1f46:	28 2f       	mov	r18, r24
    1f48:	81 e0       	ldi	r24, 0x01	; 1
    1f4a:	90 e0       	ldi	r25, 0x00	; 0
    1f4c:	0d 8c       	ldd	r0, Y+29	; 0x1d
    1f4e:	02 c0       	rjmp	.+4      	; 0x1f54 <LedDiverging300ms+0x18a>
    1f50:	88 0f       	add	r24, r24
    1f52:	99 1f       	adc	r25, r25
    1f54:	0a 94       	dec	r0
    1f56:	e2 f7       	brpl	.-8      	; 0x1f50 <LedDiverging300ms+0x186>
    1f58:	82 23       	and	r24, r18
    1f5a:	8c 93       	st	X, r24
    1f5c:	80 e0       	ldi	r24, 0x00	; 0
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	a6 e9       	ldi	r26, 0x96	; 150
    1f62:	b3 e4       	ldi	r27, 0x43	; 67
    1f64:	8b 87       	std	Y+11, r24	; 0x0b
    1f66:	9c 87       	std	Y+12, r25	; 0x0c
    1f68:	ad 87       	std	Y+13, r26	; 0x0d
    1f6a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f6c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f6e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f70:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f72:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f74:	20 e0       	ldi	r18, 0x00	; 0
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	4a ef       	ldi	r20, 0xFA	; 250
    1f7a:	54 e4       	ldi	r21, 0x44	; 68
    1f7c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f80:	dc 01       	movw	r26, r24
    1f82:	cb 01       	movw	r24, r22
    1f84:	8f 83       	std	Y+7, r24	; 0x07
    1f86:	98 87       	std	Y+8, r25	; 0x08
    1f88:	a9 87       	std	Y+9, r26	; 0x09
    1f8a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f8c:	6f 81       	ldd	r22, Y+7	; 0x07
    1f8e:	78 85       	ldd	r23, Y+8	; 0x08
    1f90:	89 85       	ldd	r24, Y+9	; 0x09
    1f92:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f94:	20 e0       	ldi	r18, 0x00	; 0
    1f96:	30 e0       	ldi	r19, 0x00	; 0
    1f98:	40 e8       	ldi	r20, 0x80	; 128
    1f9a:	5f e3       	ldi	r21, 0x3F	; 63
    1f9c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fa0:	88 23       	and	r24, r24
    1fa2:	2c f4       	brge	.+10     	; 0x1fae <LedDiverging300ms+0x1e4>
		__ticks = 1;
    1fa4:	81 e0       	ldi	r24, 0x01	; 1
    1fa6:	90 e0       	ldi	r25, 0x00	; 0
    1fa8:	9e 83       	std	Y+6, r25	; 0x06
    1faa:	8d 83       	std	Y+5, r24	; 0x05
    1fac:	3f c0       	rjmp	.+126    	; 0x202c <LedDiverging300ms+0x262>
	else if (__tmp > 65535)
    1fae:	6f 81       	ldd	r22, Y+7	; 0x07
    1fb0:	78 85       	ldd	r23, Y+8	; 0x08
    1fb2:	89 85       	ldd	r24, Y+9	; 0x09
    1fb4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fb6:	20 e0       	ldi	r18, 0x00	; 0
    1fb8:	3f ef       	ldi	r19, 0xFF	; 255
    1fba:	4f e7       	ldi	r20, 0x7F	; 127
    1fbc:	57 e4       	ldi	r21, 0x47	; 71
    1fbe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fc2:	18 16       	cp	r1, r24
    1fc4:	4c f5       	brge	.+82     	; 0x2018 <LedDiverging300ms+0x24e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fc6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fc8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fca:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fcc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fce:	20 e0       	ldi	r18, 0x00	; 0
    1fd0:	30 e0       	ldi	r19, 0x00	; 0
    1fd2:	40 e2       	ldi	r20, 0x20	; 32
    1fd4:	51 e4       	ldi	r21, 0x41	; 65
    1fd6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fda:	dc 01       	movw	r26, r24
    1fdc:	cb 01       	movw	r24, r22
    1fde:	bc 01       	movw	r22, r24
    1fe0:	cd 01       	movw	r24, r26
    1fe2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fe6:	dc 01       	movw	r26, r24
    1fe8:	cb 01       	movw	r24, r22
    1fea:	9e 83       	std	Y+6, r25	; 0x06
    1fec:	8d 83       	std	Y+5, r24	; 0x05
    1fee:	0f c0       	rjmp	.+30     	; 0x200e <LedDiverging300ms+0x244>
    1ff0:	88 ec       	ldi	r24, 0xC8	; 200
    1ff2:	90 e0       	ldi	r25, 0x00	; 0
    1ff4:	9c 83       	std	Y+4, r25	; 0x04
    1ff6:	8b 83       	std	Y+3, r24	; 0x03
    1ff8:	8b 81       	ldd	r24, Y+3	; 0x03
    1ffa:	9c 81       	ldd	r25, Y+4	; 0x04
    1ffc:	01 97       	sbiw	r24, 0x01	; 1
    1ffe:	f1 f7       	brne	.-4      	; 0x1ffc <LedDiverging300ms+0x232>
    2000:	9c 83       	std	Y+4, r25	; 0x04
    2002:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2004:	8d 81       	ldd	r24, Y+5	; 0x05
    2006:	9e 81       	ldd	r25, Y+6	; 0x06
    2008:	01 97       	sbiw	r24, 0x01	; 1
    200a:	9e 83       	std	Y+6, r25	; 0x06
    200c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    200e:	8d 81       	ldd	r24, Y+5	; 0x05
    2010:	9e 81       	ldd	r25, Y+6	; 0x06
    2012:	00 97       	sbiw	r24, 0x00	; 0
    2014:	69 f7       	brne	.-38     	; 0x1ff0 <LedDiverging300ms+0x226>
    2016:	14 c0       	rjmp	.+40     	; 0x2040 <LedDiverging300ms+0x276>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2018:	6f 81       	ldd	r22, Y+7	; 0x07
    201a:	78 85       	ldd	r23, Y+8	; 0x08
    201c:	89 85       	ldd	r24, Y+9	; 0x09
    201e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2020:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2024:	dc 01       	movw	r26, r24
    2026:	cb 01       	movw	r24, r22
    2028:	9e 83       	std	Y+6, r25	; 0x06
    202a:	8d 83       	std	Y+5, r24	; 0x05
    202c:	8d 81       	ldd	r24, Y+5	; 0x05
    202e:	9e 81       	ldd	r25, Y+6	; 0x06
    2030:	9a 83       	std	Y+2, r25	; 0x02
    2032:	89 83       	std	Y+1, r24	; 0x01
    2034:	89 81       	ldd	r24, Y+1	; 0x01
    2036:	9a 81       	ldd	r25, Y+2	; 0x02
    2038:	01 97       	sbiw	r24, 0x01	; 1
    203a:	f1 f7       	brne	.-4      	; 0x2038 <LedDiverging300ms+0x26e>
    203c:	9a 83       	std	Y+2, r25	; 0x02
    203e:	89 83       	std	Y+1, r24	; 0x01
}

void LedDiverging300ms(){
	DDRA=0xff;
	int i,j;
	for(i=4,j=3 ;i<8 && j>=0;++i,--j)
    2040:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2042:	98 a1       	ldd	r25, Y+32	; 0x20
    2044:	01 96       	adiw	r24, 0x01	; 1
    2046:	98 a3       	std	Y+32, r25	; 0x20
    2048:	8f 8f       	std	Y+31, r24	; 0x1f
    204a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    204c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    204e:	01 97       	sbiw	r24, 0x01	; 1
    2050:	9e 8f       	std	Y+30, r25	; 0x1e
    2052:	8d 8f       	std	Y+29, r24	; 0x1d
    2054:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2056:	98 a1       	ldd	r25, Y+32	; 0x20
    2058:	88 30       	cpi	r24, 0x08	; 8
    205a:	91 05       	cpc	r25, r1
    205c:	2c f4       	brge	.+10     	; 0x2068 <LedDiverging300ms+0x29e>
    205e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2060:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2062:	99 23       	and	r25, r25
    2064:	0c f0       	brlt	.+2      	; 0x2068 <LedDiverging300ms+0x29e>
    2066:	c8 ce       	rjmp	.-624    	; 0x1df8 <LedDiverging300ms+0x2e>




	}
}
    2068:	a0 96       	adiw	r28, 0x20	; 32
    206a:	0f b6       	in	r0, 0x3f	; 63
    206c:	f8 94       	cli
    206e:	de bf       	out	0x3e, r29	; 62
    2070:	0f be       	out	0x3f, r0	; 63
    2072:	cd bf       	out	0x3d, r28	; 61
    2074:	cf 91       	pop	r28
    2076:	df 91       	pop	r29
    2078:	08 95       	ret

0000207a <PingPong250ms>:

void PingPong250ms(){
    207a:	df 93       	push	r29
    207c:	cf 93       	push	r28
    207e:	cd b7       	in	r28, 0x3d	; 61
    2080:	de b7       	in	r29, 0x3e	; 62
    2082:	6c 97       	sbiw	r28, 0x1c	; 28
    2084:	0f b6       	in	r0, 0x3f	; 63
    2086:	f8 94       	cli
    2088:	de bf       	out	0x3e, r29	; 62
    208a:	0f be       	out	0x3f, r0	; 63
    208c:	cd bf       	out	0x3d, r28	; 61

	ShiftLeft250ms();
    208e:	0e 94 39 0b 	call	0x1672	; 0x1672 <ShiftLeft250ms>
    2092:	80 e0       	ldi	r24, 0x00	; 0
    2094:	90 e0       	ldi	r25, 0x00	; 0
    2096:	aa e7       	ldi	r26, 0x7A	; 122
    2098:	b3 e4       	ldi	r27, 0x43	; 67
    209a:	89 8f       	std	Y+25, r24	; 0x19
    209c:	9a 8f       	std	Y+26, r25	; 0x1a
    209e:	ab 8f       	std	Y+27, r26	; 0x1b
    20a0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20a2:	69 8d       	ldd	r22, Y+25	; 0x19
    20a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    20a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    20a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    20aa:	20 e0       	ldi	r18, 0x00	; 0
    20ac:	30 e0       	ldi	r19, 0x00	; 0
    20ae:	4a ef       	ldi	r20, 0xFA	; 250
    20b0:	54 e4       	ldi	r21, 0x44	; 68
    20b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20b6:	dc 01       	movw	r26, r24
    20b8:	cb 01       	movw	r24, r22
    20ba:	8d 8b       	std	Y+21, r24	; 0x15
    20bc:	9e 8b       	std	Y+22, r25	; 0x16
    20be:	af 8b       	std	Y+23, r26	; 0x17
    20c0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    20c2:	6d 89       	ldd	r22, Y+21	; 0x15
    20c4:	7e 89       	ldd	r23, Y+22	; 0x16
    20c6:	8f 89       	ldd	r24, Y+23	; 0x17
    20c8:	98 8d       	ldd	r25, Y+24	; 0x18
    20ca:	20 e0       	ldi	r18, 0x00	; 0
    20cc:	30 e0       	ldi	r19, 0x00	; 0
    20ce:	40 e8       	ldi	r20, 0x80	; 128
    20d0:	5f e3       	ldi	r21, 0x3F	; 63
    20d2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20d6:	88 23       	and	r24, r24
    20d8:	2c f4       	brge	.+10     	; 0x20e4 <PingPong250ms+0x6a>
		__ticks = 1;
    20da:	81 e0       	ldi	r24, 0x01	; 1
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	9c 8b       	std	Y+20, r25	; 0x14
    20e0:	8b 8b       	std	Y+19, r24	; 0x13
    20e2:	3f c0       	rjmp	.+126    	; 0x2162 <PingPong250ms+0xe8>
	else if (__tmp > 65535)
    20e4:	6d 89       	ldd	r22, Y+21	; 0x15
    20e6:	7e 89       	ldd	r23, Y+22	; 0x16
    20e8:	8f 89       	ldd	r24, Y+23	; 0x17
    20ea:	98 8d       	ldd	r25, Y+24	; 0x18
    20ec:	20 e0       	ldi	r18, 0x00	; 0
    20ee:	3f ef       	ldi	r19, 0xFF	; 255
    20f0:	4f e7       	ldi	r20, 0x7F	; 127
    20f2:	57 e4       	ldi	r21, 0x47	; 71
    20f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    20f8:	18 16       	cp	r1, r24
    20fa:	4c f5       	brge	.+82     	; 0x214e <PingPong250ms+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20fc:	69 8d       	ldd	r22, Y+25	; 0x19
    20fe:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2100:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2102:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2104:	20 e0       	ldi	r18, 0x00	; 0
    2106:	30 e0       	ldi	r19, 0x00	; 0
    2108:	40 e2       	ldi	r20, 0x20	; 32
    210a:	51 e4       	ldi	r21, 0x41	; 65
    210c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2110:	dc 01       	movw	r26, r24
    2112:	cb 01       	movw	r24, r22
    2114:	bc 01       	movw	r22, r24
    2116:	cd 01       	movw	r24, r26
    2118:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    211c:	dc 01       	movw	r26, r24
    211e:	cb 01       	movw	r24, r22
    2120:	9c 8b       	std	Y+20, r25	; 0x14
    2122:	8b 8b       	std	Y+19, r24	; 0x13
    2124:	0f c0       	rjmp	.+30     	; 0x2144 <PingPong250ms+0xca>
    2126:	88 ec       	ldi	r24, 0xC8	; 200
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	9a 8b       	std	Y+18, r25	; 0x12
    212c:	89 8b       	std	Y+17, r24	; 0x11
    212e:	89 89       	ldd	r24, Y+17	; 0x11
    2130:	9a 89       	ldd	r25, Y+18	; 0x12
    2132:	01 97       	sbiw	r24, 0x01	; 1
    2134:	f1 f7       	brne	.-4      	; 0x2132 <PingPong250ms+0xb8>
    2136:	9a 8b       	std	Y+18, r25	; 0x12
    2138:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    213a:	8b 89       	ldd	r24, Y+19	; 0x13
    213c:	9c 89       	ldd	r25, Y+20	; 0x14
    213e:	01 97       	sbiw	r24, 0x01	; 1
    2140:	9c 8b       	std	Y+20, r25	; 0x14
    2142:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2144:	8b 89       	ldd	r24, Y+19	; 0x13
    2146:	9c 89       	ldd	r25, Y+20	; 0x14
    2148:	00 97       	sbiw	r24, 0x00	; 0
    214a:	69 f7       	brne	.-38     	; 0x2126 <PingPong250ms+0xac>
    214c:	14 c0       	rjmp	.+40     	; 0x2176 <PingPong250ms+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    214e:	6d 89       	ldd	r22, Y+21	; 0x15
    2150:	7e 89       	ldd	r23, Y+22	; 0x16
    2152:	8f 89       	ldd	r24, Y+23	; 0x17
    2154:	98 8d       	ldd	r25, Y+24	; 0x18
    2156:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    215a:	dc 01       	movw	r26, r24
    215c:	cb 01       	movw	r24, r22
    215e:	9c 8b       	std	Y+20, r25	; 0x14
    2160:	8b 8b       	std	Y+19, r24	; 0x13
    2162:	8b 89       	ldd	r24, Y+19	; 0x13
    2164:	9c 89       	ldd	r25, Y+20	; 0x14
    2166:	98 8b       	std	Y+16, r25	; 0x10
    2168:	8f 87       	std	Y+15, r24	; 0x0f
    216a:	8f 85       	ldd	r24, Y+15	; 0x0f
    216c:	98 89       	ldd	r25, Y+16	; 0x10
    216e:	01 97       	sbiw	r24, 0x01	; 1
    2170:	f1 f7       	brne	.-4      	; 0x216e <PingPong250ms+0xf4>
    2172:	98 8b       	std	Y+16, r25	; 0x10
    2174:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(250);
	ShiftRight250ms();
    2176:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <ShiftRight250ms>
    217a:	80 e0       	ldi	r24, 0x00	; 0
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	aa e7       	ldi	r26, 0x7A	; 122
    2180:	b3 e4       	ldi	r27, 0x43	; 67
    2182:	8b 87       	std	Y+11, r24	; 0x0b
    2184:	9c 87       	std	Y+12, r25	; 0x0c
    2186:	ad 87       	std	Y+13, r26	; 0x0d
    2188:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    218a:	6b 85       	ldd	r22, Y+11	; 0x0b
    218c:	7c 85       	ldd	r23, Y+12	; 0x0c
    218e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2190:	9e 85       	ldd	r25, Y+14	; 0x0e
    2192:	20 e0       	ldi	r18, 0x00	; 0
    2194:	30 e0       	ldi	r19, 0x00	; 0
    2196:	4a ef       	ldi	r20, 0xFA	; 250
    2198:	54 e4       	ldi	r21, 0x44	; 68
    219a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    219e:	dc 01       	movw	r26, r24
    21a0:	cb 01       	movw	r24, r22
    21a2:	8f 83       	std	Y+7, r24	; 0x07
    21a4:	98 87       	std	Y+8, r25	; 0x08
    21a6:	a9 87       	std	Y+9, r26	; 0x09
    21a8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    21aa:	6f 81       	ldd	r22, Y+7	; 0x07
    21ac:	78 85       	ldd	r23, Y+8	; 0x08
    21ae:	89 85       	ldd	r24, Y+9	; 0x09
    21b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    21b2:	20 e0       	ldi	r18, 0x00	; 0
    21b4:	30 e0       	ldi	r19, 0x00	; 0
    21b6:	40 e8       	ldi	r20, 0x80	; 128
    21b8:	5f e3       	ldi	r21, 0x3F	; 63
    21ba:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21be:	88 23       	and	r24, r24
    21c0:	2c f4       	brge	.+10     	; 0x21cc <PingPong250ms+0x152>
		__ticks = 1;
    21c2:	81 e0       	ldi	r24, 0x01	; 1
    21c4:	90 e0       	ldi	r25, 0x00	; 0
    21c6:	9e 83       	std	Y+6, r25	; 0x06
    21c8:	8d 83       	std	Y+5, r24	; 0x05
    21ca:	3f c0       	rjmp	.+126    	; 0x224a <PingPong250ms+0x1d0>
	else if (__tmp > 65535)
    21cc:	6f 81       	ldd	r22, Y+7	; 0x07
    21ce:	78 85       	ldd	r23, Y+8	; 0x08
    21d0:	89 85       	ldd	r24, Y+9	; 0x09
    21d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    21d4:	20 e0       	ldi	r18, 0x00	; 0
    21d6:	3f ef       	ldi	r19, 0xFF	; 255
    21d8:	4f e7       	ldi	r20, 0x7F	; 127
    21da:	57 e4       	ldi	r21, 0x47	; 71
    21dc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21e0:	18 16       	cp	r1, r24
    21e2:	4c f5       	brge	.+82     	; 0x2236 <PingPong250ms+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    21e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    21e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    21ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    21ec:	20 e0       	ldi	r18, 0x00	; 0
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	40 e2       	ldi	r20, 0x20	; 32
    21f2:	51 e4       	ldi	r21, 0x41	; 65
    21f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21f8:	dc 01       	movw	r26, r24
    21fa:	cb 01       	movw	r24, r22
    21fc:	bc 01       	movw	r22, r24
    21fe:	cd 01       	movw	r24, r26
    2200:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2204:	dc 01       	movw	r26, r24
    2206:	cb 01       	movw	r24, r22
    2208:	9e 83       	std	Y+6, r25	; 0x06
    220a:	8d 83       	std	Y+5, r24	; 0x05
    220c:	0f c0       	rjmp	.+30     	; 0x222c <PingPong250ms+0x1b2>
    220e:	88 ec       	ldi	r24, 0xC8	; 200
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	9c 83       	std	Y+4, r25	; 0x04
    2214:	8b 83       	std	Y+3, r24	; 0x03
    2216:	8b 81       	ldd	r24, Y+3	; 0x03
    2218:	9c 81       	ldd	r25, Y+4	; 0x04
    221a:	01 97       	sbiw	r24, 0x01	; 1
    221c:	f1 f7       	brne	.-4      	; 0x221a <PingPong250ms+0x1a0>
    221e:	9c 83       	std	Y+4, r25	; 0x04
    2220:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2222:	8d 81       	ldd	r24, Y+5	; 0x05
    2224:	9e 81       	ldd	r25, Y+6	; 0x06
    2226:	01 97       	sbiw	r24, 0x01	; 1
    2228:	9e 83       	std	Y+6, r25	; 0x06
    222a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    222c:	8d 81       	ldd	r24, Y+5	; 0x05
    222e:	9e 81       	ldd	r25, Y+6	; 0x06
    2230:	00 97       	sbiw	r24, 0x00	; 0
    2232:	69 f7       	brne	.-38     	; 0x220e <PingPong250ms+0x194>
    2234:	14 c0       	rjmp	.+40     	; 0x225e <PingPong250ms+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2236:	6f 81       	ldd	r22, Y+7	; 0x07
    2238:	78 85       	ldd	r23, Y+8	; 0x08
    223a:	89 85       	ldd	r24, Y+9	; 0x09
    223c:	9a 85       	ldd	r25, Y+10	; 0x0a
    223e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2242:	dc 01       	movw	r26, r24
    2244:	cb 01       	movw	r24, r22
    2246:	9e 83       	std	Y+6, r25	; 0x06
    2248:	8d 83       	std	Y+5, r24	; 0x05
    224a:	8d 81       	ldd	r24, Y+5	; 0x05
    224c:	9e 81       	ldd	r25, Y+6	; 0x06
    224e:	9a 83       	std	Y+2, r25	; 0x02
    2250:	89 83       	std	Y+1, r24	; 0x01
    2252:	89 81       	ldd	r24, Y+1	; 0x01
    2254:	9a 81       	ldd	r25, Y+2	; 0x02
    2256:	01 97       	sbiw	r24, 0x01	; 1
    2258:	f1 f7       	brne	.-4      	; 0x2256 <PingPong250ms+0x1dc>
    225a:	9a 83       	std	Y+2, r25	; 0x02
    225c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(250);



}
    225e:	6c 96       	adiw	r28, 0x1c	; 28
    2260:	0f b6       	in	r0, 0x3f	; 63
    2262:	f8 94       	cli
    2264:	de bf       	out	0x3e, r29	; 62
    2266:	0f be       	out	0x3f, r0	; 63
    2268:	cd bf       	out	0x3d, r28	; 61
    226a:	cf 91       	pop	r28
    226c:	df 91       	pop	r29
    226e:	08 95       	ret

00002270 <SnakeEffect300ms>:

void SnakeEffect300ms(){
    2270:	df 93       	push	r29
    2272:	cf 93       	push	r28
    2274:	cd b7       	in	r28, 0x3d	; 61
    2276:	de b7       	in	r29, 0x3e	; 62
    2278:	60 97       	sbiw	r28, 0x10	; 16
    227a:	0f b6       	in	r0, 0x3f	; 63
    227c:	f8 94       	cli
    227e:	de bf       	out	0x3e, r29	; 62
    2280:	0f be       	out	0x3f, r0	; 63
    2282:	cd bf       	out	0x3d, r28	; 61
    DDRA=0xff;
    2284:	ea e3       	ldi	r30, 0x3A	; 58
    2286:	f0 e0       	ldi	r31, 0x00	; 0
    2288:	8f ef       	ldi	r24, 0xFF	; 255
    228a:	80 83       	st	Z, r24
	int i;
	for(i=7;i>=0;--i)
    228c:	87 e0       	ldi	r24, 0x07	; 7
    228e:	90 e0       	ldi	r25, 0x00	; 0
    2290:	98 8b       	std	Y+16, r25	; 0x10
    2292:	8f 87       	std	Y+15, r24	; 0x0f
    2294:	87 c0       	rjmp	.+270    	; 0x23a4 <SnakeEffect300ms+0x134>
	{
		PORTA |=(1<<i);
    2296:	ab e3       	ldi	r26, 0x3B	; 59
    2298:	b0 e0       	ldi	r27, 0x00	; 0
    229a:	eb e3       	ldi	r30, 0x3B	; 59
    229c:	f0 e0       	ldi	r31, 0x00	; 0
    229e:	80 81       	ld	r24, Z
    22a0:	28 2f       	mov	r18, r24
    22a2:	81 e0       	ldi	r24, 0x01	; 1
    22a4:	90 e0       	ldi	r25, 0x00	; 0
    22a6:	0f 84       	ldd	r0, Y+15	; 0x0f
    22a8:	02 c0       	rjmp	.+4      	; 0x22ae <SnakeEffect300ms+0x3e>
    22aa:	88 0f       	add	r24, r24
    22ac:	99 1f       	adc	r25, r25
    22ae:	0a 94       	dec	r0
    22b0:	e2 f7       	brpl	.-8      	; 0x22aa <SnakeEffect300ms+0x3a>
    22b2:	82 2b       	or	r24, r18
    22b4:	8c 93       	st	X, r24
    22b6:	80 e0       	ldi	r24, 0x00	; 0
    22b8:	90 e0       	ldi	r25, 0x00	; 0
    22ba:	a6 e9       	ldi	r26, 0x96	; 150
    22bc:	b3 e4       	ldi	r27, 0x43	; 67
    22be:	8b 87       	std	Y+11, r24	; 0x0b
    22c0:	9c 87       	std	Y+12, r25	; 0x0c
    22c2:	ad 87       	std	Y+13, r26	; 0x0d
    22c4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22c6:	6b 85       	ldd	r22, Y+11	; 0x0b
    22c8:	7c 85       	ldd	r23, Y+12	; 0x0c
    22ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    22cc:	9e 85       	ldd	r25, Y+14	; 0x0e
    22ce:	20 e0       	ldi	r18, 0x00	; 0
    22d0:	30 e0       	ldi	r19, 0x00	; 0
    22d2:	4a ef       	ldi	r20, 0xFA	; 250
    22d4:	54 e4       	ldi	r21, 0x44	; 68
    22d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22da:	dc 01       	movw	r26, r24
    22dc:	cb 01       	movw	r24, r22
    22de:	8f 83       	std	Y+7, r24	; 0x07
    22e0:	98 87       	std	Y+8, r25	; 0x08
    22e2:	a9 87       	std	Y+9, r26	; 0x09
    22e4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    22e6:	6f 81       	ldd	r22, Y+7	; 0x07
    22e8:	78 85       	ldd	r23, Y+8	; 0x08
    22ea:	89 85       	ldd	r24, Y+9	; 0x09
    22ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    22ee:	20 e0       	ldi	r18, 0x00	; 0
    22f0:	30 e0       	ldi	r19, 0x00	; 0
    22f2:	40 e8       	ldi	r20, 0x80	; 128
    22f4:	5f e3       	ldi	r21, 0x3F	; 63
    22f6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22fa:	88 23       	and	r24, r24
    22fc:	2c f4       	brge	.+10     	; 0x2308 <SnakeEffect300ms+0x98>
		__ticks = 1;
    22fe:	81 e0       	ldi	r24, 0x01	; 1
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	9e 83       	std	Y+6, r25	; 0x06
    2304:	8d 83       	std	Y+5, r24	; 0x05
    2306:	3f c0       	rjmp	.+126    	; 0x2386 <SnakeEffect300ms+0x116>
	else if (__tmp > 65535)
    2308:	6f 81       	ldd	r22, Y+7	; 0x07
    230a:	78 85       	ldd	r23, Y+8	; 0x08
    230c:	89 85       	ldd	r24, Y+9	; 0x09
    230e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2310:	20 e0       	ldi	r18, 0x00	; 0
    2312:	3f ef       	ldi	r19, 0xFF	; 255
    2314:	4f e7       	ldi	r20, 0x7F	; 127
    2316:	57 e4       	ldi	r21, 0x47	; 71
    2318:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    231c:	18 16       	cp	r1, r24
    231e:	4c f5       	brge	.+82     	; 0x2372 <SnakeEffect300ms+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2320:	6b 85       	ldd	r22, Y+11	; 0x0b
    2322:	7c 85       	ldd	r23, Y+12	; 0x0c
    2324:	8d 85       	ldd	r24, Y+13	; 0x0d
    2326:	9e 85       	ldd	r25, Y+14	; 0x0e
    2328:	20 e0       	ldi	r18, 0x00	; 0
    232a:	30 e0       	ldi	r19, 0x00	; 0
    232c:	40 e2       	ldi	r20, 0x20	; 32
    232e:	51 e4       	ldi	r21, 0x41	; 65
    2330:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2334:	dc 01       	movw	r26, r24
    2336:	cb 01       	movw	r24, r22
    2338:	bc 01       	movw	r22, r24
    233a:	cd 01       	movw	r24, r26
    233c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2340:	dc 01       	movw	r26, r24
    2342:	cb 01       	movw	r24, r22
    2344:	9e 83       	std	Y+6, r25	; 0x06
    2346:	8d 83       	std	Y+5, r24	; 0x05
    2348:	0f c0       	rjmp	.+30     	; 0x2368 <SnakeEffect300ms+0xf8>
    234a:	88 ec       	ldi	r24, 0xC8	; 200
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	9c 83       	std	Y+4, r25	; 0x04
    2350:	8b 83       	std	Y+3, r24	; 0x03
    2352:	8b 81       	ldd	r24, Y+3	; 0x03
    2354:	9c 81       	ldd	r25, Y+4	; 0x04
    2356:	01 97       	sbiw	r24, 0x01	; 1
    2358:	f1 f7       	brne	.-4      	; 0x2356 <SnakeEffect300ms+0xe6>
    235a:	9c 83       	std	Y+4, r25	; 0x04
    235c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    235e:	8d 81       	ldd	r24, Y+5	; 0x05
    2360:	9e 81       	ldd	r25, Y+6	; 0x06
    2362:	01 97       	sbiw	r24, 0x01	; 1
    2364:	9e 83       	std	Y+6, r25	; 0x06
    2366:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2368:	8d 81       	ldd	r24, Y+5	; 0x05
    236a:	9e 81       	ldd	r25, Y+6	; 0x06
    236c:	00 97       	sbiw	r24, 0x00	; 0
    236e:	69 f7       	brne	.-38     	; 0x234a <SnakeEffect300ms+0xda>
    2370:	14 c0       	rjmp	.+40     	; 0x239a <SnakeEffect300ms+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2372:	6f 81       	ldd	r22, Y+7	; 0x07
    2374:	78 85       	ldd	r23, Y+8	; 0x08
    2376:	89 85       	ldd	r24, Y+9	; 0x09
    2378:	9a 85       	ldd	r25, Y+10	; 0x0a
    237a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    237e:	dc 01       	movw	r26, r24
    2380:	cb 01       	movw	r24, r22
    2382:	9e 83       	std	Y+6, r25	; 0x06
    2384:	8d 83       	std	Y+5, r24	; 0x05
    2386:	8d 81       	ldd	r24, Y+5	; 0x05
    2388:	9e 81       	ldd	r25, Y+6	; 0x06
    238a:	9a 83       	std	Y+2, r25	; 0x02
    238c:	89 83       	std	Y+1, r24	; 0x01
    238e:	89 81       	ldd	r24, Y+1	; 0x01
    2390:	9a 81       	ldd	r25, Y+2	; 0x02
    2392:	01 97       	sbiw	r24, 0x01	; 1
    2394:	f1 f7       	brne	.-4      	; 0x2392 <SnakeEffect300ms+0x122>
    2396:	9a 83       	std	Y+2, r25	; 0x02
    2398:	89 83       	std	Y+1, r24	; 0x01
}

void SnakeEffect300ms(){
    DDRA=0xff;
	int i;
	for(i=7;i>=0;--i)
    239a:	8f 85       	ldd	r24, Y+15	; 0x0f
    239c:	98 89       	ldd	r25, Y+16	; 0x10
    239e:	01 97       	sbiw	r24, 0x01	; 1
    23a0:	98 8b       	std	Y+16, r25	; 0x10
    23a2:	8f 87       	std	Y+15, r24	; 0x0f
    23a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    23a6:	98 89       	ldd	r25, Y+16	; 0x10
    23a8:	99 23       	and	r25, r25
    23aa:	0c f0       	brlt	.+2      	; 0x23ae <SnakeEffect300ms+0x13e>
    23ac:	74 cf       	rjmp	.-280    	; 0x2296 <SnakeEffect300ms+0x26>
	{
		PORTA |=(1<<i);
		_delay_ms(300);

	}
}
    23ae:	60 96       	adiw	r28, 0x10	; 16
    23b0:	0f b6       	in	r0, 0x3f	; 63
    23b2:	f8 94       	cli
    23b4:	de bf       	out	0x3e, r29	; 62
    23b6:	0f be       	out	0x3f, r0	; 63
    23b8:	cd bf       	out	0x3d, r28	; 61
    23ba:	cf 91       	pop	r28
    23bc:	df 91       	pop	r29
    23be:	08 95       	ret

000023c0 <ConverDiver300ms>:
void ConverDiver300ms(){
    23c0:	df 93       	push	r29
    23c2:	cf 93       	push	r28
    23c4:	cd b7       	in	r28, 0x3d	; 61
    23c6:	de b7       	in	r29, 0x3e	; 62

	LedConverging300ms();
    23c8:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <LedConverging300ms>
    LedDiverging300ms();
    23cc:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <LedDiverging300ms>


}
    23d0:	cf 91       	pop	r28
    23d2:	df 91       	pop	r29
    23d4:	08 95       	ret

000023d6 <__prologue_saves__>:
    23d6:	2f 92       	push	r2
    23d8:	3f 92       	push	r3
    23da:	4f 92       	push	r4
    23dc:	5f 92       	push	r5
    23de:	6f 92       	push	r6
    23e0:	7f 92       	push	r7
    23e2:	8f 92       	push	r8
    23e4:	9f 92       	push	r9
    23e6:	af 92       	push	r10
    23e8:	bf 92       	push	r11
    23ea:	cf 92       	push	r12
    23ec:	df 92       	push	r13
    23ee:	ef 92       	push	r14
    23f0:	ff 92       	push	r15
    23f2:	0f 93       	push	r16
    23f4:	1f 93       	push	r17
    23f6:	cf 93       	push	r28
    23f8:	df 93       	push	r29
    23fa:	cd b7       	in	r28, 0x3d	; 61
    23fc:	de b7       	in	r29, 0x3e	; 62
    23fe:	ca 1b       	sub	r28, r26
    2400:	db 0b       	sbc	r29, r27
    2402:	0f b6       	in	r0, 0x3f	; 63
    2404:	f8 94       	cli
    2406:	de bf       	out	0x3e, r29	; 62
    2408:	0f be       	out	0x3f, r0	; 63
    240a:	cd bf       	out	0x3d, r28	; 61
    240c:	09 94       	ijmp

0000240e <__epilogue_restores__>:
    240e:	2a 88       	ldd	r2, Y+18	; 0x12
    2410:	39 88       	ldd	r3, Y+17	; 0x11
    2412:	48 88       	ldd	r4, Y+16	; 0x10
    2414:	5f 84       	ldd	r5, Y+15	; 0x0f
    2416:	6e 84       	ldd	r6, Y+14	; 0x0e
    2418:	7d 84       	ldd	r7, Y+13	; 0x0d
    241a:	8c 84       	ldd	r8, Y+12	; 0x0c
    241c:	9b 84       	ldd	r9, Y+11	; 0x0b
    241e:	aa 84       	ldd	r10, Y+10	; 0x0a
    2420:	b9 84       	ldd	r11, Y+9	; 0x09
    2422:	c8 84       	ldd	r12, Y+8	; 0x08
    2424:	df 80       	ldd	r13, Y+7	; 0x07
    2426:	ee 80       	ldd	r14, Y+6	; 0x06
    2428:	fd 80       	ldd	r15, Y+5	; 0x05
    242a:	0c 81       	ldd	r16, Y+4	; 0x04
    242c:	1b 81       	ldd	r17, Y+3	; 0x03
    242e:	aa 81       	ldd	r26, Y+2	; 0x02
    2430:	b9 81       	ldd	r27, Y+1	; 0x01
    2432:	ce 0f       	add	r28, r30
    2434:	d1 1d       	adc	r29, r1
    2436:	0f b6       	in	r0, 0x3f	; 63
    2438:	f8 94       	cli
    243a:	de bf       	out	0x3e, r29	; 62
    243c:	0f be       	out	0x3f, r0	; 63
    243e:	cd bf       	out	0x3d, r28	; 61
    2440:	ed 01       	movw	r28, r26
    2442:	08 95       	ret

00002444 <_exit>:
    2444:	f8 94       	cli

00002446 <__stop_program>:
    2446:	ff cf       	rjmp	.-2      	; 0x2446 <__stop_program>
